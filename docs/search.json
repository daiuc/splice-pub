[
  {
    "objectID": "analysis/2024-06-18-GTEx-DGE-vs-DS.html",
    "href": "analysis/2024-06-18-GTEx-DGE-vs-DS.html",
    "title": "Differential splicing vs differential gene expression in GTEx",
    "section": "",
    "text": "This notebook produces the comparison of differential splicing and differential gene expression. Pre-processed data are under ../../SpliFi/data/ds_v_dge/{tissue2}_v_{tissue1}_data.rds\n\n\n\n\nSaved RDS file is a list of 3 objects: - ds : differential splicing results - dge : differential gene expression results - dge_dsc : metadata for dge results\n\n\nCode\ncontrast &lt;- \"Brain-Cortex_v_Muscle-Skeletal\"\ndata &lt;- readRDS(glue('/project/yangili1/cdai/SpliFi/data/ds_v_dge/{contrast}_data.rds'))\n\nds &lt;- data$ds\ndge &lt;- data$dge\n\n\nds:\n\n\nCode\nhead(ds) %&gt;% gt::gt()\n\n\n\n\n\n\n\n\n\nintron\ncluster\nitype\nctype\ngene_name\ngene_id\nlogef\nMuscle-Skeletal\nBrain-Cortex\ndeltapsi\nstatus\nloglr\ndf\np\np.adjust\n\n\n\n\nchr1:930336:931038:clu_11_+\nchr1:clu_11_+\nPR\nPR\nSAMD11\nENSG00000187634.11\n0.001370763\n0.5276685\n0.5283518\n0.0006832305\nSuccess\n0.0001028596\n1\n0.9885564\n0.9923067\n\n\nchr1:931089:935771:clu_11_+\nchr1:clu_11_+\nPR\nPR\nSAMD11\nENSG00000187634.11\n-0.001370763\n0.4723315\n0.4716482\n-0.0006832305\nSuccess\n0.0001028596\n1\n0.9885564\n0.9923067\n\n\nchr1:939129:939271:clu_12_+\nchr1:clu_12_+\nPR\nPR\nSAMD11\nENSG00000187634.11\n0.033612392\n0.3507898\n0.3662486\n0.0154587644\nSuccess\n0.0288890045\n1\n0.8100430\n0.8467780\n\n\nchr1:939129:939274:clu_12_+\nchr1:clu_12_+\nPR\nPR\nSAMD11\nENSG00000187634.11\n-0.033612392\n0.6492102\n0.6337514\n-0.0154587644\nSuccess\n0.0288890045\n1\n0.8100430\n0.8467780\n\n\nchr1:939412:941143:clu_13_+\nchr1:clu_13_+\nPR\nPR\nSAMD11\nENSG00000187634.11\n-0.022419411\n0.2376936\n0.2324409\n-0.0052526823\nSuccess\n1.3652655309\n2\n0.2553129\n0.3191507\n\n\nchr1:941306:942135:clu_13_+\nchr1:clu_13_+\nPR\nPR\nSAMD11\nENSG00000187634.11\n-0.165432662\n0.4241880\n0.3595370\n-0.0646509809\nSuccess\n1.3652655309\n2\n0.2553129\n0.3191507\n\n\n\n\n\n\n\n\ndge:\n\n\nCode\nhead(dge) %&gt;% gt::gt()\n\n\n\n\n\n\n\n\n\ngene_id\nbaseMean\nlog2FoldChange\nlfcSE\nstat\npvalue\npadj\n\n\n\n\nENSG00000109061.9\n264709.904\n-13.54712\n0.2173014\n-62.34253\n0\n0\n\n\nENSG00000168530.15\n109266.143\n-13.36231\n0.1923248\n-69.47785\n0\n0\n\n\nENSG00000125414.18\n209656.455\n-13.35553\n0.2288908\n-58.34893\n0\n0\n\n\nENSG00000250978.5\n1478.281\n-13.28802\n0.3241620\n-40.99192\n0\n0\n\n\nENSG00000116748.21\n14974.113\n-13.21024\n0.2008433\n-65.77385\n0\n0\n\n\nENSG00000159173.18\n145207.909\n-13.10009\n0.2499607\n-52.40861\n0\n0\n\n\n\n\n\n\n\n\nCode\nprint(data$dge_dsc)\n\n\n[1] \"mean of normalized counts for all samples\"                     \n[2] \"log2 fold change (MLE): tissue Brain.Cortex vs Muscle.Skeletal\"\n[3] \"standard error: tissue Brain.Cortex vs Muscle.Skeletal\"        \n[4] \"Wald statistic: tissue Brain.Cortex vs Muscle.Skeletal\"        \n[5] \"Wald test p-value: tissue Brain.Cortex vs Muscle.Skeletal\"     \n[6] \"BH adjusted p-values\"                                          \n\n\n\n\n\nMainly to join ds and dge dataset on gene_id.\nIntrons from ds tables are selected using: - abs(deltapsi) &gt; .1 : to filter out introns with small deltaPSI - p.adjust &lt; FDR : to filter out introns with high FDR - ctype %in% c('PR', 'PR,UP') : introns are either productive or unproductive\n\n\nCode\ntissues &lt;- str_split(contrast, \"_v_\") %&gt;% unlist # follow tissue2_v_tissue1\n\n# confirm ds contrast\nconfirm_level_ds &lt;- all(names(data$ds)[c(9, 8)] == tissues)\n\n# confirm dge contrast\nconfirm_level_dge &lt;- str_detect(str_split(data$dge_dsc[2], \"tissue \")[[1]][[2]] %&gt;% str_replace_all(\"\\\\.\", \"-\"),\n                                glue(\"{tissues[1]} vs {tissues[2]}\")\n                                )\n\nif (confirm_level_dge & confirm_level_ds) {\n  message(\"Confirmed tissue order\")\n} else {\n  stop(\"Tissue order not confirmed\")\n}\n\n\nConfirmed tissue order\n\n\n\n\nCode\nFDR &lt;- params$fdr\n\nds[`p.adjust` &lt; FDR & ctype %in% c('PR', 'PR,UP')\n  ][,.(intron, deltapsi, itype)] %&gt;% unique %&gt;% \n  ggplot() + stat_ecdf(aes(x=abs(deltapsi), color=itype)) +\n    scale_color_brewer(type = \"qual\", palette = 2, direction = -1, label = c(PR=\"Productive\", UP=\"Unproductive\"), name = NULL) +\n    labs(title = glue(\"{contrast}\")) +\n    scale_x_sqrt(name = \"abs(deltaPSI)\")\n\n\n\n\n\n\n\n\nFigure 1: Distribution of deltaPSI in Brain-Cortex vs Muscle-Skeletal\n\n\n\n\n\nJoined ds and dge tables on gene_id.\n\n\nCode\njoined_dt &lt;- inner_join(\n  x = ds[abs(deltapsi) &gt; .1 & `p.adjust` &lt; FDR & ctype %in% c('PR', 'PR,UP'), \n        .(gene_id, gene_name, intron, cluster, itype, ctype, deltapsi)],\n  y = dge[, .(gene_id, g_l2fc = log2FoldChange, g_z = stat, g_l2fcSE = lfcSE)],\n  by = 'gene_id'\n  )\n\n\nQuick look of the joined table\n\n\nCode\njoined_dt %&gt;% head %&gt;% gt::gt()\n\n\n\n\n\n\n\n\n\ngene_id\ngene_name\nintron\ncluster\nitype\nctype\ndeltapsi\ng_l2fc\ng_z\ng_l2fcSE\n\n\n\n\nENSG00000188157.14\nAGRN\nchr1:1051815:1051992:clu_22_+\nchr1:clu_22_+\nPR\nPR\n0.4048714\n3.570754\n45.75627\n0.07803857\n\n\nENSG00000188157.14\nAGRN\nchr1:1051815:1053752:clu_22_+\nchr1:clu_22_+\nPR\nPR\n-0.3365948\n3.570754\n45.75627\n0.07803857\n\n\nENSG00000158286.12\nRNF207\nchr1:6212733:6213065:clu_111_+\nchr1:clu_111_+\nPR\nPR,UP\n-0.7185528\n1.907734\n16.39761\n0.11634224\n\n\nENSG00000158286.12\nRNF207\nchr1:6212903:6213065:clu_111_+\nchr1:clu_111_+\nUP\nPR,UP\n0.7185528\n1.907734\n16.39761\n0.11634224\n\n\nENSG00000171735.18\nCAMTA1\nchr1:7747781:7749770:clu_131_+\nchr1:clu_131_+\nPR\nPR\n0.3256170\n1.330244\n21.12208\n0.06297885\n\n\nENSG00000171735.18\nCAMTA1\nchr1:7747781:7751198:clu_131_+\nchr1:clu_131_+\nPR\nPR\n-0.6950003\n1.330244\n21.12208\n0.06297885\n\n\n\n\n\n\n\n\nCode\ndim(joined_dt)\n\n\n[1] 3603   10\n\n\nCode\njoined_dt[, .(Ngene = uniqueN(gene_id), Nintron = uniqueN(intron))]\n\n\n   Ngene Nintron\n1:  1650    3603\n\n\n\n\n\nCompute correlation between intron’s deltaPSI and gene’s log2FC\nNote for some reason quarto does not refresh the output of this cell, result is not correct!\n\n\nCode\ncor_res &lt;- joined_dt %&gt;% \n  split(by = 'itype') %&gt;% \n  map(~cor.test(x = .x$g_z, y = .x$deltapsi, method = 'p')) %&gt;% \n  imap_dfr(\n    \\(x, y) {\n      data.table(\n        cor = x$estimate,\n        p = x$`p.value`,\n        itype = y)\n    }\n  )\n\ncor_res \n\n\n           cor          p itype\n1:  0.02569642 0.14315331    PR\n2: -0.13544088 0.01062843    UP\n\n\n\n\n\n\n\nCode\njoined_dt %&gt;% \n  ggplot() +\n    geom_pointdensity(aes(g_z, deltapsi), size = .5, ) +\n    scale_color_viridis_c() + \n    geom_smooth(aes(g_z, deltapsi), method = \"lm\", formula = y~x, se = FALSE) +\n    labs(title = glue(\"{title}\", title = str_replace(contrast, \"_v_\", \" vs \")), \n         x = \"DGE: Log2FC (z)\",\n         y = \"deltaPSI\") +\n    facet_wrap(~itype, scales = \"free\")\n\n\n\n\n\n\n\n\nFigure 2: Correlation between deltaPSI and log2FC in Brain-Cortex vs Muscle-Skeletal\n\n\n\n\n\n\n\n\n\nHere, I try to compare the correlation between unproductive splicing and gene expression across all GTEx tissue pairs.\n\n\n\n\nCode\nread_contrast &lt;- function(rds, contrast, FDR = 1e-5, selection = 'all') {\n  #' @params rds: path to rds file'\n  #' @params contrast: contrast name'\n  #' @params FDR: FDR threshold'\n  #' @params selection: 'all', 'maxClu', 'maxGene'.\n  #'                    Select all introns, max deltaPSI per cluster, or max deltaPSI per gene'\n\n\n\n  data &lt;- readRDS(rds)\n  ds &lt;- data$ds\n  dge &lt;- data$dge\n  dge_dsc &lt;- data$dge_dsc\n\n  joined_dt &lt;- inner_join(\n    x = ds[abs(deltapsi) &gt; .1 & `p.adjust` &lt; FDR & ctype %in% c('PR', 'PR,UP'), \n          .(gene_id, gene_name, intron, cluster, itype, ctype, deltapsi)],\n    y = dge[, .(gene_id, g_l2fc = log2FoldChange, g_z = stat, g_l2fcSE = lfcSE)],\n    by = 'gene_id'\n  )\n\n  if (selection == 'maxClu') {\n    joined_dt  &lt;- joined_dt[\n      , .(intron, deltapsi, g_l2fc, g_z, g_l2fcSE, rk = rank(-abs(deltapsi), ties.method = \"random\")), \n      by = .(gene_id, gene_name, cluster, itype, ctype)\n      ][rk == 1, -c('rk')]\n  } else if (selection == 'maxGene') {\n    joined_dt &lt;- joined_dt[\n      , .(intron, deltapsi, g_l2fc, g_z, g_l2fcSE, rk = rank(-abs(deltapsi), ties.method = \"random\")), \n      by = .(gene_id, gene_name, itype)\n      ][rk == 1, -c('rk')]\n  }\n\n  # run cor.test\n  cor_res &lt;- joined_dt %&gt;% \n    split(by = 'itype') %&gt;% \n    map(~cor.test(x = .x$g_z, y = .x$deltapsi, method = 'pearson')) %&gt;% \n    imap_dfr(\n      \\(x, y) {\n        data.table(\n          cor = x$estimate,\n          p = x$`p.value`,\n          itype = y,\n          contrast = contrast)\n      }\n    )\n\n    # plot scatter plot\n    p  &lt;- joined_dt %&gt;% \n      ggplot() + \n        geom_pointdensity(aes(g_z, deltapsi), size = .5, alpha = .5) +\n        scale_color_viridis_c() + \n        geom_smooth(aes(g_z, deltapsi), method = \"lm\", formula = y~x, se = FALSE, color = 'blue', lwd = 1) +\n        geom_text(aes(x = 0,\n                      y = 0.1, \n                      label = paste(\"cor: \", round(cor, 3), \", \",\n                                    \"p. val: \", format(p, digits = 3, scientific = T), \n                                    sep = \"\")\n                      ),\n                  data = cor_res, color = 'blue', size = 4, vjust = 1) +\n        labs(x = \"DGE: Z-score\", y = \"DS: deltaPSI\", color = \"Num. points\", \n             title = str_wrap(str_replace_all(contrast, '_', ' '), width = 40)) +\n        facet_wrap(~itype)\n\n    return(list(cor_res = cor_res, gg = p, joineddf = joined_dt))\n\n}\n\n\nLoad contrast ds, dge data.\nrds file and contrast name example:\n\n\nCode\nrds_list &lt;- dir('/project/yangili1/cdai/SpliFi/data/ds_v_dge', full.names = T, pattern = '*.rds')\nrds_list &lt;- rds_list[str_detect(rds_list, \".+ds_v_dge.+_v_.+data.rds\")]\ncontrast_list &lt;- str_split(rds_list, \"/\") %&gt;% map(., last) %&gt;% unlist %&gt;% str_remove_all('_data\\\\.rds')\n\n\nhead(rds_list)\n\n\n[1] \"/project/yangili1/cdai/SpliFi/data/ds_v_dge/Adipose-Visceral_Omentum__v_AdrenalGland_data.rds\"                       \n[2] \"/project/yangili1/cdai/SpliFi/data/ds_v_dge/Adipose-Visceral_Omentum__v_Artery-Coronary_data.rds\"                    \n[3] \"/project/yangili1/cdai/SpliFi/data/ds_v_dge/Adipose-Visceral_Omentum__v_Brain-Amygdala_data.rds\"                     \n[4] \"/project/yangili1/cdai/SpliFi/data/ds_v_dge/Adipose-Visceral_Omentum__v_Brain-Anteriorcingulatecortex_BA24__data.rds\"\n[5] \"/project/yangili1/cdai/SpliFi/data/ds_v_dge/Adipose-Visceral_Omentum__v_Brain-Caudate_basalganglia__data.rds\"        \n[6] \"/project/yangili1/cdai/SpliFi/data/ds_v_dge/Adipose-Visceral_Omentum__v_Brain-CerebellarHemisphere_data.rds\"         \n\n\nCode\nhead(contrast_list)\n\n\n[1] \"Adipose-Visceral_Omentum__v_AdrenalGland\"                       \n[2] \"Adipose-Visceral_Omentum__v_Artery-Coronary\"                    \n[3] \"Adipose-Visceral_Omentum__v_Brain-Amygdala\"                     \n[4] \"Adipose-Visceral_Omentum__v_Brain-Anteriorcingulatecortex_BA24_\"\n[5] \"Adipose-Visceral_Omentum__v_Brain-Caudate_basalganglia_\"        \n[6] \"Adipose-Visceral_Omentum__v_Brain-CerebellarHemisphere\"         \n\n\n\n\nCode\nFDR &lt;- params$fdr\n\n\nProcess all the contrast data using FDR=1e-5:\n\n\nCode\nres &lt;- map2(rds_list, contrast_list, read_contrast, FDR = 1e-5, selection = 'maxClu')\ndf &lt;- map_dfr(res, ~.x$cor_res)\n\n\n\n\nCode\nres3 &lt;- map2(rds_list, contrast_list, read_contrast, FDR = 1e-5, selection = 'all')\ndf3 &lt;- map_dfr(res3, ~.x[['cor_res']])\n\n\n\n\n\n\n\nCode\ngg3 &lt;- df3 %&gt;% \n  ggplot() + geom_pointdensity(aes(cor, -log10(p), color = itype), size = .5, alpha = .9) +\n  scale_color_brewer(type = \"qual\", \n                     palette = 1,\n                     direction = 1,\n                     label = c(PR=\"Productive\", UP=\"Unproductive\"),\n                     name = NULL) +\n  lims(x = c(-.5, .2), y = c(0, 30)) +\n  geom_hline(yintercept = -log10(0.001), linetype = 2) +\n    labs(title = 'Correlation between differential gene\\nexpression and diffferential splicing',\n         x = 'Correlation',\n         y = '-log10(p-value)'\n         )\ngg3\n\n\nWarning: Removed 3 rows containing non-finite values (`stat_pointdensity()`).\n\n\n\n\n\n\n\n\nFigure 3: Correlation between deltaPSI and expression log2FC for all GTEx tissue pairs\n\n\n\n\n\n\n\n\n\n\nCode\nid_to_plot &lt;- map_chr(res, ~.x$cor_res[, contrast] %&gt;% unique) %&gt;% \n  str_detect(., \"Brain-Cortex_v_Muscle-Skeletal\") %&gt;% \n  which\ngg &lt;- pluck(res, id_to_plot) %&gt;% pluck('gg')\ngg\n\n\n\n\n\n\n\n\nFigure 4: Correlation between deltaPSI and expression log2FC in Brain-Cortex vs Muscle-Skeletal"
  },
  {
    "objectID": "analysis/2024-06-18-GTEx-DGE-vs-DS.html#intro",
    "href": "analysis/2024-06-18-GTEx-DGE-vs-DS.html#intro",
    "title": "Differential splicing vs differential gene expression in GTEx",
    "section": "",
    "text": "This notebook produces the comparison of differential splicing and differential gene expression. Pre-processed data are under ../../SpliFi/data/ds_v_dge/{tissue2}_v_{tissue1}_data.rds\n\n\n\n\nSaved RDS file is a list of 3 objects: - ds : differential splicing results - dge : differential gene expression results - dge_dsc : metadata for dge results\n\n\nCode\ncontrast &lt;- \"Brain-Cortex_v_Muscle-Skeletal\"\ndata &lt;- readRDS(glue('/project/yangili1/cdai/SpliFi/data/ds_v_dge/{contrast}_data.rds'))\n\nds &lt;- data$ds\ndge &lt;- data$dge\n\n\nds:\n\n\nCode\nhead(ds) %&gt;% gt::gt()\n\n\n\n\n\n\n\n\n\nintron\ncluster\nitype\nctype\ngene_name\ngene_id\nlogef\nMuscle-Skeletal\nBrain-Cortex\ndeltapsi\nstatus\nloglr\ndf\np\np.adjust\n\n\n\n\nchr1:930336:931038:clu_11_+\nchr1:clu_11_+\nPR\nPR\nSAMD11\nENSG00000187634.11\n0.001370763\n0.5276685\n0.5283518\n0.0006832305\nSuccess\n0.0001028596\n1\n0.9885564\n0.9923067\n\n\nchr1:931089:935771:clu_11_+\nchr1:clu_11_+\nPR\nPR\nSAMD11\nENSG00000187634.11\n-0.001370763\n0.4723315\n0.4716482\n-0.0006832305\nSuccess\n0.0001028596\n1\n0.9885564\n0.9923067\n\n\nchr1:939129:939271:clu_12_+\nchr1:clu_12_+\nPR\nPR\nSAMD11\nENSG00000187634.11\n0.033612392\n0.3507898\n0.3662486\n0.0154587644\nSuccess\n0.0288890045\n1\n0.8100430\n0.8467780\n\n\nchr1:939129:939274:clu_12_+\nchr1:clu_12_+\nPR\nPR\nSAMD11\nENSG00000187634.11\n-0.033612392\n0.6492102\n0.6337514\n-0.0154587644\nSuccess\n0.0288890045\n1\n0.8100430\n0.8467780\n\n\nchr1:939412:941143:clu_13_+\nchr1:clu_13_+\nPR\nPR\nSAMD11\nENSG00000187634.11\n-0.022419411\n0.2376936\n0.2324409\n-0.0052526823\nSuccess\n1.3652655309\n2\n0.2553129\n0.3191507\n\n\nchr1:941306:942135:clu_13_+\nchr1:clu_13_+\nPR\nPR\nSAMD11\nENSG00000187634.11\n-0.165432662\n0.4241880\n0.3595370\n-0.0646509809\nSuccess\n1.3652655309\n2\n0.2553129\n0.3191507\n\n\n\n\n\n\n\n\ndge:\n\n\nCode\nhead(dge) %&gt;% gt::gt()\n\n\n\n\n\n\n\n\n\ngene_id\nbaseMean\nlog2FoldChange\nlfcSE\nstat\npvalue\npadj\n\n\n\n\nENSG00000109061.9\n264709.904\n-13.54712\n0.2173014\n-62.34253\n0\n0\n\n\nENSG00000168530.15\n109266.143\n-13.36231\n0.1923248\n-69.47785\n0\n0\n\n\nENSG00000125414.18\n209656.455\n-13.35553\n0.2288908\n-58.34893\n0\n0\n\n\nENSG00000250978.5\n1478.281\n-13.28802\n0.3241620\n-40.99192\n0\n0\n\n\nENSG00000116748.21\n14974.113\n-13.21024\n0.2008433\n-65.77385\n0\n0\n\n\nENSG00000159173.18\n145207.909\n-13.10009\n0.2499607\n-52.40861\n0\n0\n\n\n\n\n\n\n\n\nCode\nprint(data$dge_dsc)\n\n\n[1] \"mean of normalized counts for all samples\"                     \n[2] \"log2 fold change (MLE): tissue Brain.Cortex vs Muscle.Skeletal\"\n[3] \"standard error: tissue Brain.Cortex vs Muscle.Skeletal\"        \n[4] \"Wald statistic: tissue Brain.Cortex vs Muscle.Skeletal\"        \n[5] \"Wald test p-value: tissue Brain.Cortex vs Muscle.Skeletal\"     \n[6] \"BH adjusted p-values\"                                          \n\n\n\n\n\nMainly to join ds and dge dataset on gene_id.\nIntrons from ds tables are selected using: - abs(deltapsi) &gt; .1 : to filter out introns with small deltaPSI - p.adjust &lt; FDR : to filter out introns with high FDR - ctype %in% c('PR', 'PR,UP') : introns are either productive or unproductive\n\n\nCode\ntissues &lt;- str_split(contrast, \"_v_\") %&gt;% unlist # follow tissue2_v_tissue1\n\n# confirm ds contrast\nconfirm_level_ds &lt;- all(names(data$ds)[c(9, 8)] == tissues)\n\n# confirm dge contrast\nconfirm_level_dge &lt;- str_detect(str_split(data$dge_dsc[2], \"tissue \")[[1]][[2]] %&gt;% str_replace_all(\"\\\\.\", \"-\"),\n                                glue(\"{tissues[1]} vs {tissues[2]}\")\n                                )\n\nif (confirm_level_dge & confirm_level_ds) {\n  message(\"Confirmed tissue order\")\n} else {\n  stop(\"Tissue order not confirmed\")\n}\n\n\nConfirmed tissue order\n\n\n\n\nCode\nFDR &lt;- params$fdr\n\nds[`p.adjust` &lt; FDR & ctype %in% c('PR', 'PR,UP')\n  ][,.(intron, deltapsi, itype)] %&gt;% unique %&gt;% \n  ggplot() + stat_ecdf(aes(x=abs(deltapsi), color=itype)) +\n    scale_color_brewer(type = \"qual\", palette = 2, direction = -1, label = c(PR=\"Productive\", UP=\"Unproductive\"), name = NULL) +\n    labs(title = glue(\"{contrast}\")) +\n    scale_x_sqrt(name = \"abs(deltaPSI)\")\n\n\n\n\n\n\n\n\nFigure 1: Distribution of deltaPSI in Brain-Cortex vs Muscle-Skeletal\n\n\n\n\n\nJoined ds and dge tables on gene_id.\n\n\nCode\njoined_dt &lt;- inner_join(\n  x = ds[abs(deltapsi) &gt; .1 & `p.adjust` &lt; FDR & ctype %in% c('PR', 'PR,UP'), \n        .(gene_id, gene_name, intron, cluster, itype, ctype, deltapsi)],\n  y = dge[, .(gene_id, g_l2fc = log2FoldChange, g_z = stat, g_l2fcSE = lfcSE)],\n  by = 'gene_id'\n  )\n\n\nQuick look of the joined table\n\n\nCode\njoined_dt %&gt;% head %&gt;% gt::gt()\n\n\n\n\n\n\n\n\n\ngene_id\ngene_name\nintron\ncluster\nitype\nctype\ndeltapsi\ng_l2fc\ng_z\ng_l2fcSE\n\n\n\n\nENSG00000188157.14\nAGRN\nchr1:1051815:1051992:clu_22_+\nchr1:clu_22_+\nPR\nPR\n0.4048714\n3.570754\n45.75627\n0.07803857\n\n\nENSG00000188157.14\nAGRN\nchr1:1051815:1053752:clu_22_+\nchr1:clu_22_+\nPR\nPR\n-0.3365948\n3.570754\n45.75627\n0.07803857\n\n\nENSG00000158286.12\nRNF207\nchr1:6212733:6213065:clu_111_+\nchr1:clu_111_+\nPR\nPR,UP\n-0.7185528\n1.907734\n16.39761\n0.11634224\n\n\nENSG00000158286.12\nRNF207\nchr1:6212903:6213065:clu_111_+\nchr1:clu_111_+\nUP\nPR,UP\n0.7185528\n1.907734\n16.39761\n0.11634224\n\n\nENSG00000171735.18\nCAMTA1\nchr1:7747781:7749770:clu_131_+\nchr1:clu_131_+\nPR\nPR\n0.3256170\n1.330244\n21.12208\n0.06297885\n\n\nENSG00000171735.18\nCAMTA1\nchr1:7747781:7751198:clu_131_+\nchr1:clu_131_+\nPR\nPR\n-0.6950003\n1.330244\n21.12208\n0.06297885\n\n\n\n\n\n\n\n\nCode\ndim(joined_dt)\n\n\n[1] 3603   10\n\n\nCode\njoined_dt[, .(Ngene = uniqueN(gene_id), Nintron = uniqueN(intron))]\n\n\n   Ngene Nintron\n1:  1650    3603\n\n\n\n\n\nCompute correlation between intron’s deltaPSI and gene’s log2FC\nNote for some reason quarto does not refresh the output of this cell, result is not correct!\n\n\nCode\ncor_res &lt;- joined_dt %&gt;% \n  split(by = 'itype') %&gt;% \n  map(~cor.test(x = .x$g_z, y = .x$deltapsi, method = 'p')) %&gt;% \n  imap_dfr(\n    \\(x, y) {\n      data.table(\n        cor = x$estimate,\n        p = x$`p.value`,\n        itype = y)\n    }\n  )\n\ncor_res \n\n\n           cor          p itype\n1:  0.02569642 0.14315331    PR\n2: -0.13544088 0.01062843    UP\n\n\n\n\n\n\n\nCode\njoined_dt %&gt;% \n  ggplot() +\n    geom_pointdensity(aes(g_z, deltapsi), size = .5, ) +\n    scale_color_viridis_c() + \n    geom_smooth(aes(g_z, deltapsi), method = \"lm\", formula = y~x, se = FALSE) +\n    labs(title = glue(\"{title}\", title = str_replace(contrast, \"_v_\", \" vs \")), \n         x = \"DGE: Log2FC (z)\",\n         y = \"deltaPSI\") +\n    facet_wrap(~itype, scales = \"free\")\n\n\n\n\n\n\n\n\nFigure 2: Correlation between deltaPSI and log2FC in Brain-Cortex vs Muscle-Skeletal"
  },
  {
    "objectID": "analysis/2024-06-15-GWAS-list.html",
    "href": "analysis/2024-06-15-GWAS-list.html",
    "title": "GWAS list",
    "section": "",
    "text": "Code\ngwas_path1 &lt;- \"/project/yangili1/zpmu/GWAS_loci/trait_summary.txt\"\ngwas_summ1 &lt;- fread(gwas_path1)\n\n\nUsed 54 from the following path:\n\"/project/yangili1/zpmu/GWAS_loci\"\n\n\nCode\ngwas_summ1 %&gt;% gt::gt()\n\n\n\n\n\n\n\n\n\nTrait\nLabel\nPMID\n\n\n\n\nAllergy and eczema\nAE\n29892013\n\n\nMultiple sclerosis\nMS\n31604244\n\n\nRheumatoid arthritis\nRA\n24390342\n\n\nAllergic disases\nAllergy\n29083406\n\n\nAdult-onset Asthma\nAsthma\n30929738\n\n\nAptopic dermatitis\nApD\n26482879\n\n\nCrohns' disease\nIIBDGC - CD\n26192919\n\n\nInflammaroty bowel disease\nIIBDGC - IBD\n26192919\n\n\nUlcerative colitis\nIIBDGC - UC\n26192919\n\n\nSystemic lupus erythematosus\nSLE\n27399966\n\n\nAsthma\nTAGC - Asthma\n29273806\n\n\nCrohns' disease\nCD\n28067908\n\n\nInflammaroty bowel disease\nIBD\n28067908\n\n\nUlcerative colitis\nUC\n28067908\n\n\nBasophil count\nBASO#\n27863252\n\n\nBasophil percentage of white cells\nBASO%\n27863252\n\n\nBasophil percentage of granulocytes\nBASO%GRAN\n27863252\n\n\nSum basophil neutrophil count\n(BASO+NEUT)#\n27863252\n\n\nSum eosinophil basophil count\n(EO+BASO)#\n27863252\n\n\nEosinophil count\nEO#\n27863252\n\n\nEosinophil percentage of white cells\nEO%\n27863252\n\n\nEosinophil percentage of granulocytes\nEO%GRAN\n27863252\n\n\nGranulocyte count\nGRAN#\n27863252\n\n\nGranulocyte percentage of myeloid white cells\nGRAN%MYELOID\n27863252\n\n\nHematocrit\nHCT\n27863252\n\n\nHemoglobin concentration\nHGB\n27863252\n\n\nHigh light scatter percentage of red cells\nHLSR%\n27863252\n\n\nHigh light scatter reticulocyte count\nHLSR#\n27863252\n\n\nImmature fraction of reticulocytes\nIRF\n27863252\n\n\nLymphocyte count\nLYMPH#\n27863252\n\n\nLymphocyte percentage of white cells\nLYMPH%\n27863252\n\n\nMean corpuscular hemoglobin concentration\nMCHC\n27863252\n\n\nMean corpuscular hemoglobin\nMCH\n27863252\n\n\nMean corpuscular volume\nMCV\n27863252\n\n\nMonocyte count\nMONO#\n27863252\n\n\nMonocyte percentage of white cells\nMONO%\n27863252\n\n\nMean platelet volume\nMPV\n27863252\n\n\nMyeloid white cell count\nMYELOID#\n27863252\n\n\nSum neutrophil eosinophil count\n(NEUT+EO)#\n27863252\n\n\nNeutrophil percentage of granulocytes\nNEUT%GRAN\n27863252\n\n\nNeutrophil count\nNEUT#\n27863252\n\n\nNeutrophil percentage of white cells\nNEUT%\n27863252\n\n\nPlateletcrit\nPCT\n27863252\n\n\nPlatelet distribution width\nPDW\n27863252\n\n\nPlatelet count\nPLT#\n27863252\n\n\nRed blood cell count\nRBC#\n27863252\n\n\nRed cell distribution width\nRDW\n27863252\n\n\nReticulocyte count\nRET#\n27863252\n\n\nReticulocyte fraction of red cells\nRET%\n27863252\n\n\nWhite blood cell count\nWBC#\n27863252\n\n\nEstimated glomerular filtration rate\neGFR\n31152163\n\n\nType 2 diabetes\nT2D\n29632382\n\n\nParkinson's disease\nPD\n31701892\n\n\nAlzheimer's disease\nAD\n30617256"
  },
  {
    "objectID": "analysis/2024-06-15-GWAS-list.html#gwas-from-phenoix",
    "href": "analysis/2024-06-15-GWAS-list.html#gwas-from-phenoix",
    "title": "GWAS list",
    "section": "",
    "text": "Code\ngwas_path1 &lt;- \"/project/yangili1/zpmu/GWAS_loci/trait_summary.txt\"\ngwas_summ1 &lt;- fread(gwas_path1)\n\n\nUsed 54 from the following path:\n\"/project/yangili1/zpmu/GWAS_loci\"\n\n\nCode\ngwas_summ1 %&gt;% gt::gt()\n\n\n\n\n\n\n\n\n\nTrait\nLabel\nPMID\n\n\n\n\nAllergy and eczema\nAE\n29892013\n\n\nMultiple sclerosis\nMS\n31604244\n\n\nRheumatoid arthritis\nRA\n24390342\n\n\nAllergic disases\nAllergy\n29083406\n\n\nAdult-onset Asthma\nAsthma\n30929738\n\n\nAptopic dermatitis\nApD\n26482879\n\n\nCrohns' disease\nIIBDGC - CD\n26192919\n\n\nInflammaroty bowel disease\nIIBDGC - IBD\n26192919\n\n\nUlcerative colitis\nIIBDGC - UC\n26192919\n\n\nSystemic lupus erythematosus\nSLE\n27399966\n\n\nAsthma\nTAGC - Asthma\n29273806\n\n\nCrohns' disease\nCD\n28067908\n\n\nInflammaroty bowel disease\nIBD\n28067908\n\n\nUlcerative colitis\nUC\n28067908\n\n\nBasophil count\nBASO#\n27863252\n\n\nBasophil percentage of white cells\nBASO%\n27863252\n\n\nBasophil percentage of granulocytes\nBASO%GRAN\n27863252\n\n\nSum basophil neutrophil count\n(BASO+NEUT)#\n27863252\n\n\nSum eosinophil basophil count\n(EO+BASO)#\n27863252\n\n\nEosinophil count\nEO#\n27863252\n\n\nEosinophil percentage of white cells\nEO%\n27863252\n\n\nEosinophil percentage of granulocytes\nEO%GRAN\n27863252\n\n\nGranulocyte count\nGRAN#\n27863252\n\n\nGranulocyte percentage of myeloid white cells\nGRAN%MYELOID\n27863252\n\n\nHematocrit\nHCT\n27863252\n\n\nHemoglobin concentration\nHGB\n27863252\n\n\nHigh light scatter percentage of red cells\nHLSR%\n27863252\n\n\nHigh light scatter reticulocyte count\nHLSR#\n27863252\n\n\nImmature fraction of reticulocytes\nIRF\n27863252\n\n\nLymphocyte count\nLYMPH#\n27863252\n\n\nLymphocyte percentage of white cells\nLYMPH%\n27863252\n\n\nMean corpuscular hemoglobin concentration\nMCHC\n27863252\n\n\nMean corpuscular hemoglobin\nMCH\n27863252\n\n\nMean corpuscular volume\nMCV\n27863252\n\n\nMonocyte count\nMONO#\n27863252\n\n\nMonocyte percentage of white cells\nMONO%\n27863252\n\n\nMean platelet volume\nMPV\n27863252\n\n\nMyeloid white cell count\nMYELOID#\n27863252\n\n\nSum neutrophil eosinophil count\n(NEUT+EO)#\n27863252\n\n\nNeutrophil percentage of granulocytes\nNEUT%GRAN\n27863252\n\n\nNeutrophil count\nNEUT#\n27863252\n\n\nNeutrophil percentage of white cells\nNEUT%\n27863252\n\n\nPlateletcrit\nPCT\n27863252\n\n\nPlatelet distribution width\nPDW\n27863252\n\n\nPlatelet count\nPLT#\n27863252\n\n\nRed blood cell count\nRBC#\n27863252\n\n\nRed cell distribution width\nRDW\n27863252\n\n\nReticulocyte count\nRET#\n27863252\n\n\nReticulocyte fraction of red cells\nRET%\n27863252\n\n\nWhite blood cell count\nWBC#\n27863252\n\n\nEstimated glomerular filtration rate\neGFR\n31152163\n\n\nType 2 diabetes\nT2D\n29632382\n\n\nParkinson's disease\nPD\n31701892\n\n\nAlzheimer's disease\nAD\n30617256"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Analysis. Data path in SpliFi/code"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Unproductive Splicing",
    "section": "",
    "text": "Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Title\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nDate\n\n\nTitle\n\n\nAuthor\n\n\n\n\n\n\nJun 28, 2024\n\n\noff by 1 bug\n\n\n \n\n\n\n\nJun 25, 2024\n\n\nShould leafcutter 2 be using 1 or 0 based coordinates?\n\n\n \n\n\n\n\nJun 20, 2024\n\n\nDifferential splicing vs differential gene expression in Selected Tissue pairs\n\n\n \n\n\n\n\nJun 18, 2024\n\n\nDifferential splicing vs differential gene expression in GTEx\n\n\n \n\n\n\n\nJun 17, 2024\n\n\nUnproductive splicing ratio in GTEx across tissues\n\n\n \n\n\n\n\nJun 15, 2024\n\n\nGTEx sQTL enrichment\n\n\n \n\n\n\n\nJun 15, 2024\n\n\nGWAS list\n\n\n \n\n\n\n\nJun 10, 2024\n\n\nGenome Tracks\n\n\n \n\n\n\n\nJun 10, 2024\n\n\nQTL tally\n\n\n \n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "analysis/2024-06-10-tally-sQTLs.html",
    "href": "analysis/2024-06-10-tally-sQTLs.html",
    "title": "QTL tally",
    "section": "",
    "text": "Code\nbase.geu &lt;- \"../code/results/qtl/noisy/Geuvadis/EUR/separateNoise/cis_100000/perm\"\ngeu.sql.f &lt;- glue(\"{base}/chr{chroms}.addQval.txt.gz\", base = base.geu, chroms = 1:22)\nnames(geu.sql.f) &lt;- glue(\"chr{1:22}\")\n\n\n\n\nCode\ngeu.sql &lt;- map_dfr(geu.sql.f, fread)\n\n\n\n\nCode\naddLabels &lt;- function(dt) {\n  pid_split &lt;- str_split(dt$phenotype_id, \":\")\n  dt$itype &lt;- map_chr(pid_split, ~ .x[5])\n  dt$clu &lt;- map_chr(pid_split, ~ .x[4])\n  dt$clu &lt;- str_extract(dt$clu, \"clu_[0-9]+\")\n\n  dt &lt;- dt[, ctype := paste(sort(unique(itype)), collapse = \",\"), by = clu][]\n  return(dt)\n}\n\n\n\n\nCode\ngeu.sql &lt;- addLabels(geu.sql)\n\n\n\n\nCode\ngeu.sql[1:2, ] %&gt;% DT::datatable()\n\n\n\n\n\n\n\n\nNumber of introns\n\n\nCode\ngeu.sql[, .N, by = itype\n  ][, .(itype, N, P = N/sum(N)  )\n  ][order(-N)]\n\n\n   itype     N          P\n1:    PR 83826 0.63891768\n2:    UP 29665 0.22610518\n3:    IN 11756 0.08960366\n4:    NE  5953 0.04537348\n\n\nNumber of clusters\n\n\nCode\ngeu.sql[, .(N = uniqueN(clu)), by = .(ctype)][, .(ctype, N, P = N/sum(N))][order(-N)]\n\n\n          ctype     N            P\n 1:          PR 21693 0.4992175634\n 2:       PR,UP 14598 0.3359414553\n 3:          IN  2943 0.0677267915\n 4:       NE,PR  2154 0.0495696599\n 5:    NE,PR,UP  1277 0.0293873982\n 6:          UP   488 0.0112302665\n 7:          NE    72 0.0016569246\n 8:    IN,PR,UP    53 0.0012196806\n 9:       IN,UP    43 0.0009895522\n10:       IN,PR    38 0.0008744880\n11:    IN,NE,PR    31 0.0007133981\n12: IN,NE,PR,UP    22 0.0005062825\n13:       IN,NE    20 0.0004602568\n14:       NE,UP    17 0.0003912183\n15:    IN,NE,UP     5 0.0001150642\n\n\n\n\n\nNumber of introns with FDR &lt; 0.1\n\n\nCode\nFDR = params$fdr\n\n\n\n\nCode\ngeu.sql[q &lt; FDR, .N, by = .(itype)][, .(itype, N, P = N/sum(N))][order(-N)]\n\n\n   itype    N          P\n1:    PR 9092 0.54777684\n2:    UP 3981 0.23984817\n3:    IN 2690 0.16206772\n4:    NE  835 0.05030727\n\n\nNumber of clusters with FDR &lt; 0.1\n\n\nCode\ngeu.sql[q &lt; FDR, .(N = uniqueN(clu)), by = .(ctype)][, .(ctype, N, P = N/sum(N))][order(-N)]\n\n\n          ctype    N            P\n 1:       PR,UP 3391 0.4070828331\n 2:          PR 2405 0.2887154862\n 3:          IN  971 0.1165666267\n 4:       NE,PR  700 0.0840336134\n 5:    NE,PR,UP  642 0.0770708283\n 6:          UP   86 0.0103241297\n 7:    IN,PR,UP   27 0.0032412965\n 8:       IN,PR   22 0.0026410564\n 9:    IN,NE,PR   21 0.0025210084\n10:       IN,UP   20 0.0024009604\n11: IN,NE,PR,UP   17 0.0020408163\n12:          NE   15 0.0018007203\n13:       IN,NE    8 0.0009603842\n14:       NE,UP    4 0.0004801921\n15:    IN,NE,UP    1 0.0001200480\n\n\n\n\n\nNumber of introns satisfying FDR &lt; 0.1 and from clusters of PR or PR,UP\n\n\nCode\ngeu.sql[q &lt; FDR & ctype %in% c(\"PR\", \"PR,UP\"), .N, by = .(itype)][, .(itype, N, P = N/sum(N))][order(-N)]\n\n\n   itype    N         P\n1:    PR 6960 0.6886998\n2:    UP 3146 0.3113002\n\n\nNumber of clusters satisfying FDR &lt; 0.1 and from clusters of PR or PR,UP\n\n\nCode\ngeu.sql[q &lt; FDR & ctype %in% c(\"PR\", \"PR,UP\"), .(N = uniqueN(clu)), by = .(ctype)][, .(ctype, N, P = N/sum(N))][order(-N)]\n\n\n   ctype    N         P\n1: PR,UP 3391 0.5850587\n2:    PR 2405 0.4149413\n\n\n\n\n\n\nFor GTEx, use sQTLs from 49 tissues. We use FDR &lt; 0.1 and cluster type PR or PR,UP to filter sQTLs.\n\n\nCode\nTissues &lt;- dir(\"../code/results/qtl/noisy/GTEx/\")\nTissues &lt;- Tissues[!Tissues %in% c(\"Bladder\")]\nnames(Tissues) &lt;- Tissues \nbase1.gtex &lt;- \"../code/results/qtl/noisy/GTEx\"\nbase2.gtex &lt;- \"/cis_100000/perm\"\nsuffix &lt;- \"addQval.txt.gz\"\n# \"../code/results/qtl/noisy/GTEx/Liver/separateNoise/cis_100000/perm/chr1.addQval.txt.gz\"\n\n\n\n\nCode\nreadGTExSQTL &lt;- function(tissue) {\n  base1.gtex &lt;- \"../code/results/qtl/noisy/GTEx/\"\n  base2.gtex &lt;- \"/cis_100000/perm\"\n  suffix &lt;- \"addQval.txt.gz\"\n  folder &lt;- glue(\"{base1.gtex}/{tissue}/separateNoise{base2.gtex}\")\n  files &lt;- glue(\"{folder}/chr{1:22}.{suffix}\")\n  dt &lt;- map_dfr(files, fread)\n}\n\n\n\n\nCode\ngtex.sqls &lt;- readRDS(\"2024-06-10-gtex-sQTLs.rds\")\n\n\n\n\nCode\ntissue.labels &lt;- fread(\"/project/yangili1/cdai/splice-pub/analysis/gtex-tissue-code.csv\",\n                      col.names = c(\"tissue\", \"label\"), header = F)\n\n\nNumber of introns that satisfy FDR &lt; 0.1 and from clusters of PR or PR,UP\n\n\nCode\ngtex.plot1.dt &lt;- imap_dfr(gtex.sqls, \\(x, y) {x[q &lt; FDR & ctype %in% c(\"PR\", \"PR,UP\"), .N, by = .(itype)][, .(tissue = y, itype, N, P = N/sum(N))][order(-N)]})\n\n\n\n\nCode\ngtex.plot1.dt %&gt;% \n  left_join(y = tissue.labels, by = \"tissue\") %&gt;% \n  ggplot() + geom_col(aes(x = forcats::fct_reorder(label, -N), y = N, fill = itype)) +\n    scale_fill_brewer(palette = \"Blues\", direction = 1) +\n    labs(x = NULL, y = \"Num. of sQTL introns\", fill = NULL) + \n    theme_cowplot() +\n    theme(axis.text.x = element_text(angle = 90, hjust = 1),\n          legend.position = \"top\"\n         )\n\n\n\n\n\n\n\n\nFigure 1\n\n\n\n\n\n\n\nCode\ngtex.plot1.dt %&gt;% DT::datatable()\n\n\n\n\nTable 1\n\n\n\n\n\n\n\n\n\n\nNumber of clusters that satisfy FDR &lt; 0.1 and from clusters of PR or PR,UP\n\n\nCode\ngtex.plot2.dt &lt;- imap_dfr(gtex.sqls, \\(x, y) {\n  x[q &lt; FDR & ctype %in% c(\"PR\", \"PR,UP\"), .(N = uniqueN(clu)), by = .(ctype)][, .(tissue = y, ctype, N, P = N/sum(N))][order(-N)]\n}\n)\n\n\n\n\nCode\ngtex.plot2.dt %&gt;% \n  left_join(y = tissue.labels, by = \"tissue\") %&gt;% \n  ggplot() + geom_col(aes(x = forcats::fct_reorder(label, -N), y = N, fill = ctype)) +\n    scale_fill_brewer(palette = \"Blues\", direction = 1) +\n    labs(x = NULL, y = \"Num. of sQTL (cluster)\", fill = NULL) + \n    theme_cowplot() +\n    theme(axis.text.x = element_text(angle = 90, hjust = 1),\n          legend.position = \"top\"\n         )\n\n\n\n\n\n\n\n\nFigure 2\n\n\n\n\n\n\n\nCode\ngtex.plot2.dt %&gt;% DT::datatable()\n\n\n\n\nTable 2"
  },
  {
    "objectID": "analysis/2024-06-10-tally-sQTLs.html#geuvaids-eur",
    "href": "analysis/2024-06-10-tally-sQTLs.html#geuvaids-eur",
    "title": "QTL tally",
    "section": "",
    "text": "Code\nbase.geu &lt;- \"../code/results/qtl/noisy/Geuvadis/EUR/separateNoise/cis_100000/perm\"\ngeu.sql.f &lt;- glue(\"{base}/chr{chroms}.addQval.txt.gz\", base = base.geu, chroms = 1:22)\nnames(geu.sql.f) &lt;- glue(\"chr{1:22}\")\n\n\n\n\nCode\ngeu.sql &lt;- map_dfr(geu.sql.f, fread)\n\n\n\n\nCode\naddLabels &lt;- function(dt) {\n  pid_split &lt;- str_split(dt$phenotype_id, \":\")\n  dt$itype &lt;- map_chr(pid_split, ~ .x[5])\n  dt$clu &lt;- map_chr(pid_split, ~ .x[4])\n  dt$clu &lt;- str_extract(dt$clu, \"clu_[0-9]+\")\n\n  dt &lt;- dt[, ctype := paste(sort(unique(itype)), collapse = \",\"), by = clu][]\n  return(dt)\n}\n\n\n\n\nCode\ngeu.sql &lt;- addLabels(geu.sql)\n\n\n\n\nCode\ngeu.sql[1:2, ] %&gt;% DT::datatable()\n\n\n\n\n\n\n\n\nNumber of introns\n\n\nCode\ngeu.sql[, .N, by = itype\n  ][, .(itype, N, P = N/sum(N)  )\n  ][order(-N)]\n\n\n   itype     N          P\n1:    PR 83826 0.63891768\n2:    UP 29665 0.22610518\n3:    IN 11756 0.08960366\n4:    NE  5953 0.04537348\n\n\nNumber of clusters\n\n\nCode\ngeu.sql[, .(N = uniqueN(clu)), by = .(ctype)][, .(ctype, N, P = N/sum(N))][order(-N)]\n\n\n          ctype     N            P\n 1:          PR 21693 0.4992175634\n 2:       PR,UP 14598 0.3359414553\n 3:          IN  2943 0.0677267915\n 4:       NE,PR  2154 0.0495696599\n 5:    NE,PR,UP  1277 0.0293873982\n 6:          UP   488 0.0112302665\n 7:          NE    72 0.0016569246\n 8:    IN,PR,UP    53 0.0012196806\n 9:       IN,UP    43 0.0009895522\n10:       IN,PR    38 0.0008744880\n11:    IN,NE,PR    31 0.0007133981\n12: IN,NE,PR,UP    22 0.0005062825\n13:       IN,NE    20 0.0004602568\n14:       NE,UP    17 0.0003912183\n15:    IN,NE,UP     5 0.0001150642\n\n\n\n\n\nNumber of introns with FDR &lt; 0.1\n\n\nCode\nFDR = params$fdr\n\n\n\n\nCode\ngeu.sql[q &lt; FDR, .N, by = .(itype)][, .(itype, N, P = N/sum(N))][order(-N)]\n\n\n   itype    N          P\n1:    PR 9092 0.54777684\n2:    UP 3981 0.23984817\n3:    IN 2690 0.16206772\n4:    NE  835 0.05030727\n\n\nNumber of clusters with FDR &lt; 0.1\n\n\nCode\ngeu.sql[q &lt; FDR, .(N = uniqueN(clu)), by = .(ctype)][, .(ctype, N, P = N/sum(N))][order(-N)]\n\n\n          ctype    N            P\n 1:       PR,UP 3391 0.4070828331\n 2:          PR 2405 0.2887154862\n 3:          IN  971 0.1165666267\n 4:       NE,PR  700 0.0840336134\n 5:    NE,PR,UP  642 0.0770708283\n 6:          UP   86 0.0103241297\n 7:    IN,PR,UP   27 0.0032412965\n 8:       IN,PR   22 0.0026410564\n 9:    IN,NE,PR   21 0.0025210084\n10:       IN,UP   20 0.0024009604\n11: IN,NE,PR,UP   17 0.0020408163\n12:          NE   15 0.0018007203\n13:       IN,NE    8 0.0009603842\n14:       NE,UP    4 0.0004801921\n15:    IN,NE,UP    1 0.0001200480\n\n\n\n\n\nNumber of introns satisfying FDR &lt; 0.1 and from clusters of PR or PR,UP\n\n\nCode\ngeu.sql[q &lt; FDR & ctype %in% c(\"PR\", \"PR,UP\"), .N, by = .(itype)][, .(itype, N, P = N/sum(N))][order(-N)]\n\n\n   itype    N         P\n1:    PR 6960 0.6886998\n2:    UP 3146 0.3113002\n\n\nNumber of clusters satisfying FDR &lt; 0.1 and from clusters of PR or PR,UP\n\n\nCode\ngeu.sql[q &lt; FDR & ctype %in% c(\"PR\", \"PR,UP\"), .(N = uniqueN(clu)), by = .(ctype)][, .(ctype, N, P = N/sum(N))][order(-N)]\n\n\n   ctype    N         P\n1: PR,UP 3391 0.5850587\n2:    PR 2405 0.4149413"
  },
  {
    "objectID": "analysis/2024-06-10-tally-sQTLs.html#gtex",
    "href": "analysis/2024-06-10-tally-sQTLs.html#gtex",
    "title": "QTL tally",
    "section": "",
    "text": "For GTEx, use sQTLs from 49 tissues. We use FDR &lt; 0.1 and cluster type PR or PR,UP to filter sQTLs.\n\n\nCode\nTissues &lt;- dir(\"../code/results/qtl/noisy/GTEx/\")\nTissues &lt;- Tissues[!Tissues %in% c(\"Bladder\")]\nnames(Tissues) &lt;- Tissues \nbase1.gtex &lt;- \"../code/results/qtl/noisy/GTEx\"\nbase2.gtex &lt;- \"/cis_100000/perm\"\nsuffix &lt;- \"addQval.txt.gz\"\n# \"../code/results/qtl/noisy/GTEx/Liver/separateNoise/cis_100000/perm/chr1.addQval.txt.gz\"\n\n\n\n\nCode\nreadGTExSQTL &lt;- function(tissue) {\n  base1.gtex &lt;- \"../code/results/qtl/noisy/GTEx/\"\n  base2.gtex &lt;- \"/cis_100000/perm\"\n  suffix &lt;- \"addQval.txt.gz\"\n  folder &lt;- glue(\"{base1.gtex}/{tissue}/separateNoise{base2.gtex}\")\n  files &lt;- glue(\"{folder}/chr{1:22}.{suffix}\")\n  dt &lt;- map_dfr(files, fread)\n}\n\n\n\n\nCode\ngtex.sqls &lt;- readRDS(\"2024-06-10-gtex-sQTLs.rds\")\n\n\n\n\nCode\ntissue.labels &lt;- fread(\"/project/yangili1/cdai/splice-pub/analysis/gtex-tissue-code.csv\",\n                      col.names = c(\"tissue\", \"label\"), header = F)\n\n\nNumber of introns that satisfy FDR &lt; 0.1 and from clusters of PR or PR,UP\n\n\nCode\ngtex.plot1.dt &lt;- imap_dfr(gtex.sqls, \\(x, y) {x[q &lt; FDR & ctype %in% c(\"PR\", \"PR,UP\"), .N, by = .(itype)][, .(tissue = y, itype, N, P = N/sum(N))][order(-N)]})\n\n\n\n\nCode\ngtex.plot1.dt %&gt;% \n  left_join(y = tissue.labels, by = \"tissue\") %&gt;% \n  ggplot() + geom_col(aes(x = forcats::fct_reorder(label, -N), y = N, fill = itype)) +\n    scale_fill_brewer(palette = \"Blues\", direction = 1) +\n    labs(x = NULL, y = \"Num. of sQTL introns\", fill = NULL) + \n    theme_cowplot() +\n    theme(axis.text.x = element_text(angle = 90, hjust = 1),\n          legend.position = \"top\"\n         )\n\n\n\n\n\n\n\n\nFigure 1\n\n\n\n\n\n\n\nCode\ngtex.plot1.dt %&gt;% DT::datatable()\n\n\n\n\nTable 1\n\n\n\n\n\n\n\n\n\n\nNumber of clusters that satisfy FDR &lt; 0.1 and from clusters of PR or PR,UP\n\n\nCode\ngtex.plot2.dt &lt;- imap_dfr(gtex.sqls, \\(x, y) {\n  x[q &lt; FDR & ctype %in% c(\"PR\", \"PR,UP\"), .(N = uniqueN(clu)), by = .(ctype)][, .(tissue = y, ctype, N, P = N/sum(N))][order(-N)]\n}\n)\n\n\n\n\nCode\ngtex.plot2.dt %&gt;% \n  left_join(y = tissue.labels, by = \"tissue\") %&gt;% \n  ggplot() + geom_col(aes(x = forcats::fct_reorder(label, -N), y = N, fill = ctype)) +\n    scale_fill_brewer(palette = \"Blues\", direction = 1) +\n    labs(x = NULL, y = \"Num. of sQTL (cluster)\", fill = NULL) + \n    theme_cowplot() +\n    theme(axis.text.x = element_text(angle = 90, hjust = 1),\n          legend.position = \"top\"\n         )\n\n\n\n\n\n\n\n\nFigure 2\n\n\n\n\n\n\n\nCode\ngtex.plot2.dt %&gt;% DT::datatable()\n\n\n\n\nTable 2"
  },
  {
    "objectID": "analysis/2024-06-17-unprod-splicing-ratio-GTEx.html",
    "href": "analysis/2024-06-17-unprod-splicing-ratio-GTEx.html",
    "title": "Unproductive splicing ratio in GTEx across tissues",
    "section": "",
    "text": "Code\ntissues &lt;- dir(\"/project/yangili1/cdai/SpliFi/code/results/pheno/noisy/GTEx\")\ntissues &lt;- tissues[!str_detect(tissues, \"Bladder\")]\n\n\n\n\nCode\ncomputeUnprodRatio &lt;- function(tissue_rds) {\n\n    introns &lt;- readRDS(tissue_rds)\n    datacols &lt;- names(introns)[5:ncol(introns)]\n    # remove clu_type == N, clusters with only unproductive introns\n    introns  &lt;- introns[str_detect(clu_type, 'PR')]\n    # total reads (by sample)\n    totals &lt;- colSums(introns[, ..datacols])\n    # unproudctive reads (by sample)\n    unprod &lt;- introns[intron_type == 'UP', ..datacols] %&gt;% colSums\n    # unproductive reads / total reads\n    if (all(names(totals) == names(unprod))) {\n        unprod_ratio &lt;- round(unprod / totals, 5)\n    } else {\n        stop('samples of totals and unprod are not the same')\n    }\n\n    return(unprod_ratio)\n\n}\n\n\npoint_scale &lt;- function(x, newmin, newmax) {\n  newmax  &lt;- max(newmax)\n  newmin  &lt;- min(newmin)\n  new_range &lt;- abs(newmax - newmin) \n  old_range &lt;- abs(max(x) - min(x))\n\n  # Normalize the values between 0 and 1\n  normalized_x &lt;- (x - min(x)) / old_range\n\n  # Scale the normalized values to the new range and offset by 0.5\n  scaled_x &lt;- normalized_x * new_range + newmin\n\n  return(scaled_x)\n}\n\n\n\n\nCode\ntissues_rds &lt;- glue(\"/project/yangili1/cdai/SpliFi/data/ExtractFractions/GTEx/{tissues}.numerators_constcounts.noise_by_intron.rds\")\nnames(tissues_rds) &lt;- tissues\n\n\n\n\nCode\nratios &lt;- map(tissues_rds, computeUnprodRatio)\n\n\n\n\nCode\nratios &lt;- imap_dfr(\n    ratios,\n    \\(x, y) enframe(x, \"sample\", \"unprodRatio\") %&gt;% add_column(tissue = y)\n)\nratios  &lt;- as.data.table(ratios) %&gt;%\n    .[, .(sample, unprodRatio, nsample = uniqueN(sample)), by = tissue]\n\n\n\n\nCode\nratios[, .(median_prod_ratio = median(unprodRatio)), by = tissue][order(-median_prod_ratio)]\n\n\n                                  tissue median_prod_ratio\n 1:                               Testis          0.009140\n 2:                     Brain-Cerebellum          0.007230\n 3:           Brain-CerebellarHemisphere          0.006740\n 4:        Brain-Spinalcord_cervicalc-1_          0.006150\n 5:                              Thyroid          0.005650\n 6:                             Prostate          0.005630\n 7:                         Nerve-Tibial          0.005360\n 8:                               Spleen          0.005230\n 9:                            Pituitary          0.004970\n10:                Brain-Substantianigra          0.004820\n11:                                Ovary          0.004780\n12:                                 Lung          0.004705\n13:                        Kidney-Cortex          0.004650\n14:                    Brain-Hippocampus          0.004630\n15:         SmallIntestine-TerminalIleum          0.004630\n16:                 Breast-MammaryTissue          0.004540\n17:                               Uterus          0.004515\n18:                   Brain-Hypothalamus          0.004450\n19:       Skin-NotSunExposed_Suprapubic_          0.004310\n20:                         Brain-Cortex          0.004290\n21:                               Vagina          0.004290\n22:                 Adipose-Subcutaneous          0.004220\n23:                       Brain-Amygdala          0.004160\n24:          Brain-Putamen_basalganglia_          0.004150\n25:            Skin-SunExposed_Lowerleg_          0.004140\n26:                        Colon-Sigmoid          0.004110\n27:          Brain-Caudate_basalganglia_          0.004070\n28: Brain-Nucleusaccumbens_basalganglia_          0.004065\n29:            Adipose-Visceral_Omentum_          0.004010\n30:                     Colon-Transverse          0.003955\n31:   Esophagus-GastroesophagealJunction          0.003910\n32:  Brain-Anteriorcingulatecortex_BA24_          0.003890\n33:             Brain-FrontalCortex_BA9_          0.003820\n34:                           WholeBlood          0.003730\n35:                   MinorSalivaryGland          0.003705\n36:                 Esophagus-Muscularis          0.003690\n37:                        Artery-Tibial          0.003570\n38:                      Artery-Coronary          0.003520\n39:                              Stomach          0.003450\n40:                         Artery-Aorta          0.003440\n41:                         AdrenalGland          0.003435\n42:                Heart-AtrialAppendage          0.003400\n43:                                Liver          0.003160\n44:     Cells-EBV-transformedlymphocytes          0.003110\n45:                     Esophagus-Mucosa          0.002960\n46:                  Heart-LeftVentricle          0.002650\n47:                             Pancreas          0.002460\n48:                      Muscle-Skeletal          0.002450\n49:            Cells-Culturedfibroblasts          0.001860\n                                  tissue median_prod_ratio\n\n\nCode\nmedian_unprod_ratio_all_gtex &lt;- ratios[tissue != \"EUR\", .(median_prod_ratio = median(unprodRatio)), by = tissue\n    ][order(-median_prod_ratio)] %&gt;% \n    pull(median_prod_ratio) %&gt;% median\n\n\n\n\nCode\ntissue.labels &lt;- fread(\"/project/yangili1/cdai/splice-pub/analysis/gtex-tissue-code.csv\",\n                       header = F, col.names = c(\"tissue\", \"label\"))\n\n\n\n\nCode\ndf &lt;- ratios[, .(sample, unprodRatio, nsample, med = median(unprodRatio),rk=rank(unprodRatio, ties.method = \"first\")), by = tissue\n        ][, .(sample, unprodRatio, nsample, med, tissue = forcats::fct_reorder(tissue, -med), rk)\n        ][, .(sample, tissue, unprodRatio, nsample, med, tissuei = as.integer(tissue), rk)\n        ][, .(sample, unprodRatio, nsample, med, tissuei, rk, pointx = point_scale(rk, (tissuei - .5), tissuei+.5)), by = tissue\n        ][order(tissuei, rk)] %&gt;% \n    left_join(y = tissue.labels, by = \"tissue\")\n\n\n\n\nCode\nlabels  &lt;- df[, .(tissue, label, tissuei, nsample)] %&gt;% unique\nlabels\n\n\n                                  tissue   label tissuei nsample\n 1:                               Testis  TESTIS       1     361\n 2:                     Brain-Cerebellum   BRNCB       2     241\n 3:           Brain-CerebellarHemisphere  BRNCBH       3     215\n 4:        Brain-Spinalcord_cervicalc-1_  BRNSPC       4     159\n 5:                              Thyroid THYROID       5     653\n 6:                             Prostate  PRSTTE       6     245\n 7:                         Nerve-Tibial  NERVET       7     619\n 8:                               Spleen  SPLEEN       8     241\n 9:                            Pituitary  PTTARY       9     283\n10:                Brain-Substantianigra  BRNSNG      10     139\n11:                                Ovary   OVARY      11     180\n12:                                 Lung    LUNG      12     578\n13:                        Kidney-Cortex  KDNCTX      13      85\n14:                    Brain-Hippocampus  BRNHPC      14     197\n15:         SmallIntestine-TerminalIleum  SNTTRM      15     187\n16:                 Breast-MammaryTissue  BREAST      16     459\n17:                               Uterus  UTERUS      17     142\n18:                   Brain-Hypothalamus  BRNHPT      18     202\n19:       Skin-NotSunExposed_Suprapubic_  SKINNS      19     604\n20:                         Brain-Cortex   BRNCT      20     255\n21:                               Vagina  VAGINA      21     156\n22:                 Adipose-Subcutaneous  ADPSBO      22     663\n23:                       Brain-Amygdala  BRNAGD      23     152\n24:          Brain-Putamen_basalganglia_  BRNPBG      24     205\n25:            Skin-SunExposed_Lowerleg_   SKINS      25     701\n26:                        Colon-Sigmoid  CLNSGM      26     373\n27:          Brain-Caudate_basalganglia_  BRNCDB      27     246\n28: Brain-Nucleusaccumbens_basalganglia_  BRNNAB      28     246\n29:            Adipose-Visceral_Omentum_  ADPVSC      29     541\n30:                     Colon-Transverse  CLNTRN      30     406\n31:   Esophagus-GastroesophagealJunction  ESPGEL      31     375\n32:  Brain-Anteriorcingulatecortex_BA24_  BRNATG      32     176\n33:             Brain-FrontalCortex_BA9_  BRNFCT      33     209\n34:                           WholeBlood  WHLBLD      34     755\n35:                   MinorSalivaryGland  SLVRYG      35     162\n36:                 Esophagus-Muscularis  ESPMSL      36     515\n37:                        Artery-Tibial  ARTTBL      37     663\n38:                      Artery-Coronary  ARTCRN      38     240\n39:                              Stomach  STMACH      39     359\n40:                         Artery-Aorta  ARTAOT      40     432\n41:                         AdrenalGland  ADNGLD      41     258\n42:                Heart-AtrialAppendage   HRTAA      42     429\n43:                                Liver   LIVER      43     226\n44:     Cells-EBV-transformedlymphocytes     LCL      44     174\n45:                     Esophagus-Mucosa  ESPMCS      45     555\n46:                  Heart-LeftVentricle   HRTLV      46     432\n47:                             Pancreas PNCREAS      47     328\n48:                      Muscle-Skeletal MUSCLSK      48     803\n49:            Cells-Culturedfibroblasts FIBRBLS      49     504\n                                  tissue   label tissuei nsample\n\n\n\n\n\nCode\nlabel_x1 &lt;- function(ids) {\n    labels[tissuei == ids, label]\n}\n\nlabel_x2 &lt;- function(ids) {\n    labels[tissuei == ids, nsample] \n}\n\n\ndf %&gt;% left_join(y = tissue.labels, by = \"tissue\") %&gt;%\n      ggplot() +\n        geom_point(aes(x = pointx, y = unprodRatio), color = 'midnightblue', alpha = .1) +\n        geom_tile(aes(x = tissuei, y = med), color = 'firebrick', fill= 'firebrick', height = 5e-5, width = .9) +\n        scale_x_continuous(\n            breaks = unique(df$tissuei), \n            labels = unique(df$label),\n            expand = c(0, .5),\n            guide = guide_axis(angle = 90),\n            sec.axis = sec_axis(~., \n                                breaks = unique(df$tissuei),\n                                labels = label_x2,  \n                                guide = guide_axis(angle = 90)\n                               )\n            ) +\n        scale_y_continuous(labels = scales::percent_format(accuracy = .1)) +\n        labs(x = \"Tissue / Number of Samples\",\n            y = \"Fraction of unproductive reads\"\n            )\n\n\n\n\n\n\n\n\nFigure 1: Unproductive splicing ratio in GTEx across tissues"
  },
  {
    "objectID": "analysis/2024-06-18-GTEx-DGE-vs-DS.html#brain-cortex_v_muscle-skeletal",
    "href": "analysis/2024-06-18-GTEx-DGE-vs-DS.html#brain-cortex_v_muscle-skeletal",
    "title": "Differential splicing vs differential gene expression in GTEx",
    "section": "",
    "text": "Saved RDS file is a list of 3 objects: - ds : differential splicing results - dge : differential gene expression results - dge_dsc : metadata for dge results\n\n\nCode\ncontrast &lt;- \"Brain-Cortex_v_Muscle-Skeletal\"\ndata &lt;- readRDS(glue('/project/yangili1/cdai/SpliFi/data/ds_v_dge/{contrast}_data.rds'))\n\nds &lt;- data$ds\ndge &lt;- data$dge\n\n\nds:\n\n\nCode\nhead(ds) %&gt;% gt::gt()\n\n\n\n\n\n\n\n\n\nintron\ncluster\nitype\nctype\ngene_name\ngene_id\nlogef\nMuscle-Skeletal\nBrain-Cortex\ndeltapsi\nstatus\nloglr\ndf\np\np.adjust\n\n\n\n\nchr1:930336:931038:clu_11_+\nchr1:clu_11_+\nPR\nPR\nSAMD11\nENSG00000187634.11\n0.001370763\n0.5276685\n0.5283518\n0.0006832305\nSuccess\n0.0001028596\n1\n0.9885564\n0.9923067\n\n\nchr1:931089:935771:clu_11_+\nchr1:clu_11_+\nPR\nPR\nSAMD11\nENSG00000187634.11\n-0.001370763\n0.4723315\n0.4716482\n-0.0006832305\nSuccess\n0.0001028596\n1\n0.9885564\n0.9923067\n\n\nchr1:939129:939271:clu_12_+\nchr1:clu_12_+\nPR\nPR\nSAMD11\nENSG00000187634.11\n0.033612392\n0.3507898\n0.3662486\n0.0154587644\nSuccess\n0.0288890045\n1\n0.8100430\n0.8467780\n\n\nchr1:939129:939274:clu_12_+\nchr1:clu_12_+\nPR\nPR\nSAMD11\nENSG00000187634.11\n-0.033612392\n0.6492102\n0.6337514\n-0.0154587644\nSuccess\n0.0288890045\n1\n0.8100430\n0.8467780\n\n\nchr1:939412:941143:clu_13_+\nchr1:clu_13_+\nPR\nPR\nSAMD11\nENSG00000187634.11\n-0.022419411\n0.2376936\n0.2324409\n-0.0052526823\nSuccess\n1.3652655309\n2\n0.2553129\n0.3191507\n\n\nchr1:941306:942135:clu_13_+\nchr1:clu_13_+\nPR\nPR\nSAMD11\nENSG00000187634.11\n-0.165432662\n0.4241880\n0.3595370\n-0.0646509809\nSuccess\n1.3652655309\n2\n0.2553129\n0.3191507\n\n\n\n\n\n\n\n\ndge:\n\n\nCode\nhead(dge) %&gt;% gt::gt()\n\n\n\n\n\n\n\n\n\ngene_id\nbaseMean\nlog2FoldChange\nlfcSE\nstat\npvalue\npadj\n\n\n\n\nENSG00000109061.9\n264709.904\n-13.54712\n0.2173014\n-62.34253\n0\n0\n\n\nENSG00000168530.15\n109266.143\n-13.36231\n0.1923248\n-69.47785\n0\n0\n\n\nENSG00000125414.18\n209656.455\n-13.35553\n0.2288908\n-58.34893\n0\n0\n\n\nENSG00000250978.5\n1478.281\n-13.28802\n0.3241620\n-40.99192\n0\n0\n\n\nENSG00000116748.21\n14974.113\n-13.21024\n0.2008433\n-65.77385\n0\n0\n\n\nENSG00000159173.18\n145207.909\n-13.10009\n0.2499607\n-52.40861\n0\n0\n\n\n\n\n\n\n\n\nCode\nprint(data$dge_dsc)\n\n\n[1] \"mean of normalized counts for all samples\"                     \n[2] \"log2 fold change (MLE): tissue Brain.Cortex vs Muscle.Skeletal\"\n[3] \"standard error: tissue Brain.Cortex vs Muscle.Skeletal\"        \n[4] \"Wald statistic: tissue Brain.Cortex vs Muscle.Skeletal\"        \n[5] \"Wald test p-value: tissue Brain.Cortex vs Muscle.Skeletal\"     \n[6] \"BH adjusted p-values\"                                          \n\n\n\n\n\nMainly to join ds and dge dataset on gene_id.\nIntrons from ds tables are selected using: - abs(deltapsi) &gt; .1 : to filter out introns with small deltaPSI - p.adjust &lt; FDR : to filter out introns with high FDR - ctype %in% c('PR', 'PR,UP') : introns are either productive or unproductive\n\n\nCode\ntissues &lt;- str_split(contrast, \"_v_\") %&gt;% unlist # follow tissue2_v_tissue1\n\n# confirm ds contrast\nconfirm_level_ds &lt;- all(names(data$ds)[c(9, 8)] == tissues)\n\n# confirm dge contrast\nconfirm_level_dge &lt;- str_detect(str_split(data$dge_dsc[2], \"tissue \")[[1]][[2]] %&gt;% str_replace_all(\"\\\\.\", \"-\"),\n                                glue(\"{tissues[1]} vs {tissues[2]}\")\n                                )\n\nif (confirm_level_dge & confirm_level_ds) {\n  message(\"Confirmed tissue order\")\n} else {\n  stop(\"Tissue order not confirmed\")\n}\n\n\nConfirmed tissue order\n\n\n\n\nCode\nFDR &lt;- params$fdr\n\nds[`p.adjust` &lt; FDR & ctype %in% c('PR', 'PR,UP')\n  ][,.(intron, deltapsi, itype)] %&gt;% unique %&gt;% \n  ggplot() + stat_ecdf(aes(x=abs(deltapsi), color=itype)) +\n    scale_color_brewer(type = \"qual\", palette = 2, direction = -1, label = c(PR=\"Productive\", UP=\"Unproductive\"), name = NULL) +\n    labs(title = glue(\"{contrast}\")) +\n    scale_x_sqrt(name = \"abs(deltaPSI)\")\n\n\n\n\n\n\n\n\nFigure 1: Distribution of deltaPSI in Brain-Cortex vs Muscle-Skeletal\n\n\n\n\n\nJoined ds and dge tables on gene_id.\n\n\nCode\njoined_dt &lt;- inner_join(\n  x = ds[abs(deltapsi) &gt; .1 & `p.adjust` &lt; FDR & ctype %in% c('PR', 'PR,UP'), \n        .(gene_id, gene_name, intron, cluster, itype, ctype, deltapsi)],\n  y = dge[, .(gene_id, g_l2fc = log2FoldChange, g_z = stat, g_l2fcSE = lfcSE)],\n  by = 'gene_id'\n  )\n\n\nQuick look of the joined table\n\n\nCode\njoined_dt %&gt;% head %&gt;% gt::gt()\n\n\n\n\n\n\n\n\n\ngene_id\ngene_name\nintron\ncluster\nitype\nctype\ndeltapsi\ng_l2fc\ng_z\ng_l2fcSE\n\n\n\n\nENSG00000188157.14\nAGRN\nchr1:1051815:1051992:clu_22_+\nchr1:clu_22_+\nPR\nPR\n0.4048714\n3.570754\n45.75627\n0.07803857\n\n\nENSG00000188157.14\nAGRN\nchr1:1051815:1053752:clu_22_+\nchr1:clu_22_+\nPR\nPR\n-0.3365948\n3.570754\n45.75627\n0.07803857\n\n\nENSG00000158286.12\nRNF207\nchr1:6212733:6213065:clu_111_+\nchr1:clu_111_+\nPR\nPR,UP\n-0.7185528\n1.907734\n16.39761\n0.11634224\n\n\nENSG00000158286.12\nRNF207\nchr1:6212903:6213065:clu_111_+\nchr1:clu_111_+\nUP\nPR,UP\n0.7185528\n1.907734\n16.39761\n0.11634224\n\n\nENSG00000171735.18\nCAMTA1\nchr1:7747781:7749770:clu_131_+\nchr1:clu_131_+\nPR\nPR\n0.3256170\n1.330244\n21.12208\n0.06297885\n\n\nENSG00000171735.18\nCAMTA1\nchr1:7747781:7751198:clu_131_+\nchr1:clu_131_+\nPR\nPR\n-0.6950003\n1.330244\n21.12208\n0.06297885\n\n\n\n\n\n\n\n\nCode\ndim(joined_dt)\n\n\n[1] 3603   10\n\n\nCode\njoined_dt[, .(Ngene = uniqueN(gene_id), Nintron = uniqueN(intron))]\n\n\n   Ngene Nintron\n1:  1650    3603\n\n\n\n\n\nCompute correlation between intron’s deltaPSI and gene’s log2FC\nNote for some reason quarto does not refresh the output of this cell, result is not correct!\n\n\nCode\ncor_res &lt;- joined_dt %&gt;% \n  split(by = 'itype') %&gt;% \n  map(~cor.test(x = .x$g_z, y = .x$deltapsi, method = 'p')) %&gt;% \n  imap_dfr(\n    \\(x, y) {\n      data.table(\n        cor = x$estimate,\n        p = x$`p.value`,\n        itype = y)\n    }\n  )\n\ncor_res \n\n\n           cor          p itype\n1:  0.02569642 0.14315331    PR\n2: -0.13544088 0.01062843    UP\n\n\n\n\n\n\n\nCode\njoined_dt %&gt;% \n  ggplot() +\n    geom_pointdensity(aes(g_z, deltapsi), size = .5, ) +\n    scale_color_viridis_c() + \n    geom_smooth(aes(g_z, deltapsi), method = \"lm\", formula = y~x, se = FALSE) +\n    labs(title = glue(\"{title}\", title = str_replace(contrast, \"_v_\", \" vs \")), \n         x = \"DGE: Log2FC (z)\",\n         y = \"deltaPSI\") +\n    facet_wrap(~itype, scales = \"free\")\n\n\n\n\n\n\n\n\nFigure 2: Correlation between deltaPSI and log2FC in Brain-Cortex vs Muscle-Skeletal"
  },
  {
    "objectID": "analysis/2024-06-18-GTEx-DGE-vs-DS.html#unproductive-splicing-vs.-expression-for-all-gtex-tissue-pairs",
    "href": "analysis/2024-06-18-GTEx-DGE-vs-DS.html#unproductive-splicing-vs.-expression-for-all-gtex-tissue-pairs",
    "title": "Differential splicing vs differential gene expression in GTEx",
    "section": "",
    "text": "Here, I try to compare the correlation between unproductive splicing and gene expression across all GTEx tissue pairs.\n\n\n\n\nCode\nread_contrast &lt;- function(rds, contrast, FDR = 1e-5, selection = 'all') {\n  #' @params rds: path to rds file'\n  #' @params contrast: contrast name'\n  #' @params FDR: FDR threshold'\n  #' @params selection: 'all', 'maxClu', 'maxGene'.\n  #'                    Select all introns, max deltaPSI per cluster, or max deltaPSI per gene'\n\n\n\n  data &lt;- readRDS(rds)\n  ds &lt;- data$ds\n  dge &lt;- data$dge\n  dge_dsc &lt;- data$dge_dsc\n\n  joined_dt &lt;- inner_join(\n    x = ds[abs(deltapsi) &gt; .1 & `p.adjust` &lt; FDR & ctype %in% c('PR', 'PR,UP'), \n          .(gene_id, gene_name, intron, cluster, itype, ctype, deltapsi)],\n    y = dge[, .(gene_id, g_l2fc = log2FoldChange, g_z = stat, g_l2fcSE = lfcSE)],\n    by = 'gene_id'\n  )\n\n  if (selection == 'maxClu') {\n    joined_dt  &lt;- joined_dt[\n      , .(intron, deltapsi, g_l2fc, g_z, g_l2fcSE, rk = rank(-abs(deltapsi), ties.method = \"random\")), \n      by = .(gene_id, gene_name, cluster, itype, ctype)\n      ][rk == 1, -c('rk')]\n  } else if (selection == 'maxGene') {\n    joined_dt &lt;- joined_dt[\n      , .(intron, deltapsi, g_l2fc, g_z, g_l2fcSE, rk = rank(-abs(deltapsi), ties.method = \"random\")), \n      by = .(gene_id, gene_name, itype)\n      ][rk == 1, -c('rk')]\n  }\n\n  # run cor.test\n  cor_res &lt;- joined_dt %&gt;% \n    split(by = 'itype') %&gt;% \n    map(~cor.test(x = .x$g_z, y = .x$deltapsi, method = 'pearson')) %&gt;% \n    imap_dfr(\n      \\(x, y) {\n        data.table(\n          cor = x$estimate,\n          p = x$`p.value`,\n          itype = y,\n          contrast = contrast)\n      }\n    )\n\n    # plot scatter plot\n    p  &lt;- joined_dt %&gt;% \n      ggplot() + \n        geom_pointdensity(aes(g_z, deltapsi), size = .5, alpha = .5) +\n        scale_color_viridis_c() + \n        geom_smooth(aes(g_z, deltapsi), method = \"lm\", formula = y~x, se = FALSE, color = 'blue', lwd = 1) +\n        geom_text(aes(x = 0,\n                      y = 0.1, \n                      label = paste(\"cor: \", round(cor, 3), \", \",\n                                    \"p. val: \", format(p, digits = 3, scientific = T), \n                                    sep = \"\")\n                      ),\n                  data = cor_res, color = 'blue', size = 4, vjust = 1) +\n        labs(x = \"DGE: Z-score\", y = \"DS: deltaPSI\", color = \"Num. points\", \n             title = str_wrap(str_replace_all(contrast, '_', ' '), width = 40)) +\n        facet_wrap(~itype)\n\n    return(list(cor_res = cor_res, gg = p, joineddf = joined_dt))\n\n}\n\n\nLoad contrast ds, dge data.\nrds file and contrast name example:\n\n\nCode\nrds_list &lt;- dir('/project/yangili1/cdai/SpliFi/data/ds_v_dge', full.names = T, pattern = '*.rds')\nrds_list &lt;- rds_list[str_detect(rds_list, \".+ds_v_dge.+_v_.+data.rds\")]\ncontrast_list &lt;- str_split(rds_list, \"/\") %&gt;% map(., last) %&gt;% unlist %&gt;% str_remove_all('_data\\\\.rds')\n\n\nhead(rds_list)\n\n\n[1] \"/project/yangili1/cdai/SpliFi/data/ds_v_dge/Adipose-Visceral_Omentum__v_AdrenalGland_data.rds\"                       \n[2] \"/project/yangili1/cdai/SpliFi/data/ds_v_dge/Adipose-Visceral_Omentum__v_Artery-Coronary_data.rds\"                    \n[3] \"/project/yangili1/cdai/SpliFi/data/ds_v_dge/Adipose-Visceral_Omentum__v_Brain-Amygdala_data.rds\"                     \n[4] \"/project/yangili1/cdai/SpliFi/data/ds_v_dge/Adipose-Visceral_Omentum__v_Brain-Anteriorcingulatecortex_BA24__data.rds\"\n[5] \"/project/yangili1/cdai/SpliFi/data/ds_v_dge/Adipose-Visceral_Omentum__v_Brain-Caudate_basalganglia__data.rds\"        \n[6] \"/project/yangili1/cdai/SpliFi/data/ds_v_dge/Adipose-Visceral_Omentum__v_Brain-CerebellarHemisphere_data.rds\"         \n\n\nCode\nhead(contrast_list)\n\n\n[1] \"Adipose-Visceral_Omentum__v_AdrenalGland\"                       \n[2] \"Adipose-Visceral_Omentum__v_Artery-Coronary\"                    \n[3] \"Adipose-Visceral_Omentum__v_Brain-Amygdala\"                     \n[4] \"Adipose-Visceral_Omentum__v_Brain-Anteriorcingulatecortex_BA24_\"\n[5] \"Adipose-Visceral_Omentum__v_Brain-Caudate_basalganglia_\"        \n[6] \"Adipose-Visceral_Omentum__v_Brain-CerebellarHemisphere\"         \n\n\n\n\nCode\nFDR &lt;- params$fdr\n\n\nProcess all the contrast data using FDR=1e-5:\n\n\nCode\nres &lt;- map2(rds_list, contrast_list, read_contrast, FDR = 1e-5, selection = 'maxClu')\ndf &lt;- map_dfr(res, ~.x$cor_res)\n\n\n\n\nCode\nres3 &lt;- map2(rds_list, contrast_list, read_contrast, FDR = 1e-5, selection = 'all')\ndf3 &lt;- map_dfr(res3, ~.x[['cor_res']])\n\n\n\n\n\n\n\nCode\ngg3 &lt;- df3 %&gt;% \n  ggplot() + geom_pointdensity(aes(cor, -log10(p), color = itype), size = .5, alpha = .9) +\n  scale_color_brewer(type = \"qual\", \n                     palette = 1,\n                     direction = 1,\n                     label = c(PR=\"Productive\", UP=\"Unproductive\"),\n                     name = NULL) +\n  lims(x = c(-.5, .2), y = c(0, 30)) +\n  geom_hline(yintercept = -log10(0.001), linetype = 2) +\n    labs(title = 'Correlation between differential gene\\nexpression and diffferential splicing',\n         x = 'Correlation',\n         y = '-log10(p-value)'\n         )\ngg3\n\n\nWarning: Removed 3 rows containing non-finite values (`stat_pointdensity()`).\n\n\n\n\n\n\n\n\nFigure 3: Correlation between deltaPSI and expression log2FC for all GTEx tissue pairs\n\n\n\n\n\n\n\n\n\n\nCode\nid_to_plot &lt;- map_chr(res, ~.x$cor_res[, contrast] %&gt;% unique) %&gt;% \n  str_detect(., \"Brain-Cortex_v_Muscle-Skeletal\") %&gt;% \n  which\ngg &lt;- pluck(res, id_to_plot) %&gt;% pluck('gg')\ngg\n\n\n\n\n\n\n\n\nFigure 4: Correlation between deltaPSI and expression log2FC in Brain-Cortex vs Muscle-Skeletal"
  },
  {
    "objectID": "analysis/2024-06-19-GTEx-PSI-Heatmap.html",
    "href": "analysis/2024-06-19-GTEx-PSI-Heatmap.html",
    "title": "GTEx PSI heatmap",
    "section": "",
    "text": "Code\nGetTopUpIntrons &lt;- function(data, FDR_ds, FDR_dge, dPSI) {\n  dge &lt;- pluck(data, \"dge\")\n  ds &lt;- pluck(data, \"ds\")\n\n  # if a cluster has multiple UP introns, only select the best 1\n  ds &lt;- ds[itype == 'UP' & ctype == 'PR,UP'\n    ][, rk := rank(-abs(deltapsi), ties.method = \"first\"), by = cluster\n    ][rk ==1\n    ][, rk := NULL][]\n  ds &lt;- ds[`p.adjust` &lt; FDR_ds & abs(deltapsi) &gt; dPSI,]\n\n  dge &lt;- dge[padj &lt; FDR_dge,]\n  \n  ds_excl_cols &lt;- c('itype', 'ctype', 'df', 'p', 'p.adjust','logef', 'loglr', 'status')\n  dge_excl_cols &lt;- c('baseMean', 'lfcSE', 'stat', 'pvalue', 'padj')\n  chosen &lt;- inner_join(\n      x = ds[, -ds_excl_cols, with = FALSE],\n      y = dge[, -dge_excl_cols, with = FALSE],\n      by = \"gene_id\",\n      suffix = c(\"_ds\", \"_dge\")\n    ) %&gt;%\n    .[deltapsi * log2FoldChange &lt; 0, ]\n\n  return(chosen)\n}\n\n\nGetHeatmapMatrix &lt;- function(dt, clusters, contrast) {\n  # dt$intron2 &lt;- str_replace_all(dt$intron, \":clu_\\\\d+_\", \"\")\n  tissues &lt;- str_split(contrast, \"_v_\") %&gt;% unlist()\n  keep1 &lt;- c(\"intron\", \"cluster\", tissues[1], \"itype\", \"ctype\")\n  keep2 &lt;- c(\"intron\", \"cluster\", tissues[2], \"itype\", \"ctype\")\n  out &lt;- list(\n    dt[cluster %in% clusters, keep1, with = FALSE],\n    dt[cluster %in% clusters, keep2, with = FALSE]\n  )\n  names(out) &lt;- tissues\n\n  return(out)\n}\n\n\nsumPSI &lt;- function(dt, cn) {\n  dt &lt;- rename(dt, psi = {{ cn }}) %&gt;% as.data.table\n  dt &lt;- dt[itype == \"UP\"][, .(psi = sum(psi)), by = cluster] # sum unprod PSI by cluster\n  names(dt) &lt;- c(\"cluster\", cn)\n  return(as.data.table(dt))\n}\nCode\nFDR = c(ds = params$fdr_ds, dge = params$fdr_dge)\ndPSI = params$psi\n\nprint(glue(\"ds FDR: {FDR['ds']} \", \"dge FDR: {FDR['dge']} \", \"dPSI: {dPSI}\"))\n\n\nds FDR: 1e-5 dge FDR: 0.1 dPSI: 0.2\n\n\nCode\nprint(glue(\"Dir: {getwd()}\"))\n\n\nDir: /project/yangili1/cdai/splice-pub/analysis"
  },
  {
    "objectID": "analysis/2024-06-20-GTEx-DGE-vs-DS-TissueExample.html",
    "href": "analysis/2024-06-20-GTEx-DGE-vs-DS-TissueExample.html",
    "title": "Differential splicing vs differential gene expression in Selected Tissue pairs",
    "section": "",
    "text": "This notebook produces the comparison of differential splicing and differential gene expression. Pre-processed data are under ../../SpliFi/data/ds_v_dge/{tissue2}_v_{tissue1}_data.rds\n\n\nHere, I try to compare the correlation between unproductive splicing and gene expression across all GTEx tissue pairs.\n\n\n\n\nCode\nread_contrast &lt;- function(rds, contrast, PSI = 0.1, FDR = 1e-5, selection = 'all') {\n  #' @params rds: path to rds file'\n  #' @params contrast: contrast name'\n  #' @params FDR: FDR threshold'\n  #' @params selection: 'all', 'maxClu', 'maxGene'.\n  #'                    Select all introns, max deltaPSI per cluster, or max deltaPSI per gene'\n\n\n\n  data &lt;- readRDS(rds)\n  ds &lt;- data$ds\n  dge &lt;- data$dge\n  dge_dsc &lt;- data$dge_dsc\n\n  joined_dt &lt;- inner_join(\n    x = ds[abs(deltapsi) &gt; PSI & `p.adjust` &lt; FDR & ctype %in% c('PR', 'PR,UP'), \n          .(gene_id, gene_name, intron, cluster, itype, ctype, deltapsi)],\n    y = dge[, .(gene_id, g_l2fc = log2FoldChange, g_z = stat, g_l2fcSE = lfcSE)],\n    by = 'gene_id'\n  )\n\n  if (selection == 'maxClu') {\n    # select the max deltaPSI per cluster, stratified by UP and PR.\n    joined_dt  &lt;- joined_dt[\n      , .(intron, \n          deltapsi, \n          g_l2fc,\n          g_z,\n          g_l2fcSE,\n          rk = rank(-abs(deltapsi), ties.method = \"first\")\n         ), \n      by = .(gene_id, gene_name, cluster, ctype, itype)\n    ][rk == 1, -c('rk')]\n  } else if (selection == 'maxGene') {\n    # select the max deltaPSI per gene, stratified by UP and PR.\n    joined_dt &lt;- joined_dt[\n      , .(intron,\n          deltapsi,\n          g_l2fc,\n          g_z,\n          g_l2fcSE,\n          rk = rank(-abs(deltapsi), ties.method = \"first\")\n         ), \n      by = .(gene_id, gene_name, itype)\n    ][rk == 1, -c('rk')]\n  }\n\n  # run cor.test\n  cor_res &lt;- joined_dt %&gt;% \n    split(by = 'itype') %&gt;% \n    map(~cor.test(x = .x$g_z, y = .x$deltapsi, method = 'pearson')) %&gt;% \n    imap_dfr(\n      \\(x, y) {\n        data.table(\n          cor = x$estimate,\n          p = x$`p.value`,\n          itype = y,\n          contrast = contrast)\n      }\n    )\n\n    # plot scatter plot\n    p  &lt;- joined_dt %&gt;% \n      ggplot() + \n        geom_pointdensity(aes(g_z, deltapsi), size = .5, alpha = .5) +\n        scale_color_viridis_c() + \n        geom_smooth(aes(g_z, deltapsi), method = \"lm\", formula = y~x, se = FALSE, color = 'blue', lwd = 1) +\n        geom_text(aes(x = 0,\n                      y = 0.1, \n                      label = paste(\"cor: \", round(cor, 3), \", \",\n                                    \"p. val: \", format(p, digits = 3, scientific = T), \n                                    sep = \"\")\n                      ),\n                  data = cor_res, color = 'blue', size = 4, vjust = 1) +\n        labs(x = \"DGE: Z-score\",\n             y = \"DS: deltaPSI\",\n             color = \"Num. points\", \n             title = str_wrap(str_replace_all(contrast, '_', ' '), width = 40),\n             caption = glue(\"N: {nrow(joined_dt)}, \",\n                             \"FDR: {FDR}, \",\n                             \"min |PSI|: {PSI}, \")\n            ) +\n        facet_wrap(~itype)\n\n    return(list(cor_res = cor_res, gg = p, joineddf = joined_dt))\n\n}\n\n\nLoad contrast ds, dge data.\nrds file and contrast name example:\n\n\nCode\nrds_list &lt;- dir('/project/yangili1/cdai/SpliFi/data/ds_v_dge', full.names = T, pattern = '*.rds')\nrds_list &lt;- rds_list[str_detect(rds_list, \".+ds_v_dge.+_v_.+data.rds\")]\ncontrast_list &lt;- str_split(rds_list, \"/\") %&gt;% map(., last) %&gt;% unlist %&gt;% str_remove_all('_data\\\\.rds')\n\nselected_tissue_pairs &lt;- c(\n  \"Brain-Cortex_v_Muscle-Skeletal\",\n  \"Brain-Cortex_v_Liver\",\n  \"Brain-Cortex_v_WholeBlood\"\n)\n\ncontrast_list &lt;- map_chr(selected_tissue_pairs,\n    ~contrast_list[str_detect(contrast_list, .x)])\nrds_list &lt;- map_chr(selected_tissue_pairs,\n    ~rds_list[str_detect(rds_list, .x)])\n\ncontrast_list\n\n\n[1] \"Brain-Cortex_v_Muscle-Skeletal\" \"Brain-Cortex_v_Liver\"          \n[3] \"Brain-Cortex_v_WholeBlood\"     \n\n\nCode\nrds_list\n\n\n[1] \"/project/yangili1/cdai/SpliFi/data/ds_v_dge/Brain-Cortex_v_Muscle-Skeletal_data.rds\"\n[2] \"/project/yangili1/cdai/SpliFi/data/ds_v_dge/Brain-Cortex_v_Liver_data.rds\"          \n[3] \"/project/yangili1/cdai/SpliFi/data/ds_v_dge/Brain-Cortex_v_WholeBlood_data.rds\"     \n\n\n\n\nCode\nFDR &lt;- params$fdr\nminPSI &lt;- params$psi\n\n\nProcess all the contrast data using FDR=1e-5:\n\n\nCode\nres1 &lt;- map2(rds_list, contrast_list, read_contrast, PSI = minPSI, FDR = FDR, selection = 'maxClu')\ndf1 &lt;- map_dfr(res1, ~.x$cor_res)\n\n\n\n\nCode\nres2 &lt;- map2(rds_list, contrast_list, read_contrast, PSI = minPSI, FDR = FDR, selection = 'maxGene')\ndf2 &lt;- map_dfr(res2, ~.x$cor_res)\n\n\n\n\nCode\nres3 &lt;- map2(rds_list, contrast_list, read_contrast, PSI = minPSI, FDR = FDR, selection = 'all')\ndf3 &lt;- map_dfr(res3, ~.x$cor_res)\n\n\n\n\nCode\nggs1 &lt;- map(res1, ~.x$gg)\n\nggs1[[1]] + ggs1[[2]] + ggs1[[3]] + plot_layout(ncol = 3, guides = 'collect')\n\n\n\n\n\n\n\n\nFigure 1: Select 1 best intron per cluster\n\n\n\n\n\n\n\nCode\nggs2 &lt;- map(res2, ~.x$gg)\n\nggs2[[1]] + ggs2[[2]] + ggs2[[3]] + plot_layout(ncol = 3, guides = 'collect')\n\n\n\n\n\n\n\n\nFigure 2: Select 1 best intron per gene\n\n\n\n\n\n\n\nCode\nggs3 &lt;- map(res3, ~.x$gg)\n\nggs3[[1]] + ggs3[[2]] + ggs3[[3]] + plot_layout(ncol = 3, guides = 'collect')\n\n\n\n\n\n\n\n\nFigure 3: Select all introns in cluster\n\n\n\n\n\n\n\nCode\nres3[[1]]$joineddf %&gt;% DT::datatable()\n\n\n\n\nTable 1: joined data for selecting 1 best intron per cluster"
  },
  {
    "objectID": "analysis/2024-06-20-GTEx-DGE-vs-DS-TissueExample.html#unproductive-splicing-vs.-expression-for-all-gtex-tissue-pairs",
    "href": "analysis/2024-06-20-GTEx-DGE-vs-DS-TissueExample.html#unproductive-splicing-vs.-expression-for-all-gtex-tissue-pairs",
    "title": "Differential splicing vs differential gene expression in Selected Tissue pairs",
    "section": "",
    "text": "Here, I try to compare the correlation between unproductive splicing and gene expression across all GTEx tissue pairs.\n\n\n\n\nCode\nread_contrast &lt;- function(rds, contrast, PSI = 0.1, FDR = 1e-5, selection = 'all') {\n  #' @params rds: path to rds file'\n  #' @params contrast: contrast name'\n  #' @params FDR: FDR threshold'\n  #' @params selection: 'all', 'maxClu', 'maxGene'.\n  #'                    Select all introns, max deltaPSI per cluster, or max deltaPSI per gene'\n\n\n\n  data &lt;- readRDS(rds)\n  ds &lt;- data$ds\n  dge &lt;- data$dge\n  dge_dsc &lt;- data$dge_dsc\n\n  joined_dt &lt;- inner_join(\n    x = ds[abs(deltapsi) &gt; PSI & `p.adjust` &lt; FDR & ctype %in% c('PR', 'PR,UP'), \n          .(gene_id, gene_name, intron, cluster, itype, ctype, deltapsi)],\n    y = dge[, .(gene_id, g_l2fc = log2FoldChange, g_z = stat, g_l2fcSE = lfcSE)],\n    by = 'gene_id'\n  )\n\n  if (selection == 'maxClu') {\n    # select the max deltaPSI per cluster, stratified by UP and PR.\n    joined_dt  &lt;- joined_dt[\n      , .(intron, \n          deltapsi, \n          g_l2fc,\n          g_z,\n          g_l2fcSE,\n          rk = rank(-abs(deltapsi), ties.method = \"first\")\n         ), \n      by = .(gene_id, gene_name, cluster, ctype, itype)\n    ][rk == 1, -c('rk')]\n  } else if (selection == 'maxGene') {\n    # select the max deltaPSI per gene, stratified by UP and PR.\n    joined_dt &lt;- joined_dt[\n      , .(intron,\n          deltapsi,\n          g_l2fc,\n          g_z,\n          g_l2fcSE,\n          rk = rank(-abs(deltapsi), ties.method = \"first\")\n         ), \n      by = .(gene_id, gene_name, itype)\n    ][rk == 1, -c('rk')]\n  }\n\n  # run cor.test\n  cor_res &lt;- joined_dt %&gt;% \n    split(by = 'itype') %&gt;% \n    map(~cor.test(x = .x$g_z, y = .x$deltapsi, method = 'pearson')) %&gt;% \n    imap_dfr(\n      \\(x, y) {\n        data.table(\n          cor = x$estimate,\n          p = x$`p.value`,\n          itype = y,\n          contrast = contrast)\n      }\n    )\n\n    # plot scatter plot\n    p  &lt;- joined_dt %&gt;% \n      ggplot() + \n        geom_pointdensity(aes(g_z, deltapsi), size = .5, alpha = .5) +\n        scale_color_viridis_c() + \n        geom_smooth(aes(g_z, deltapsi), method = \"lm\", formula = y~x, se = FALSE, color = 'blue', lwd = 1) +\n        geom_text(aes(x = 0,\n                      y = 0.1, \n                      label = paste(\"cor: \", round(cor, 3), \", \",\n                                    \"p. val: \", format(p, digits = 3, scientific = T), \n                                    sep = \"\")\n                      ),\n                  data = cor_res, color = 'blue', size = 4, vjust = 1) +\n        labs(x = \"DGE: Z-score\",\n             y = \"DS: deltaPSI\",\n             color = \"Num. points\", \n             title = str_wrap(str_replace_all(contrast, '_', ' '), width = 40),\n             caption = glue(\"N: {nrow(joined_dt)}, \",\n                             \"FDR: {FDR}, \",\n                             \"min |PSI|: {PSI}, \")\n            ) +\n        facet_wrap(~itype)\n\n    return(list(cor_res = cor_res, gg = p, joineddf = joined_dt))\n\n}\n\n\nLoad contrast ds, dge data.\nrds file and contrast name example:\n\n\nCode\nrds_list &lt;- dir('/project/yangili1/cdai/SpliFi/data/ds_v_dge', full.names = T, pattern = '*.rds')\nrds_list &lt;- rds_list[str_detect(rds_list, \".+ds_v_dge.+_v_.+data.rds\")]\ncontrast_list &lt;- str_split(rds_list, \"/\") %&gt;% map(., last) %&gt;% unlist %&gt;% str_remove_all('_data\\\\.rds')\n\nselected_tissue_pairs &lt;- c(\n  \"Brain-Cortex_v_Muscle-Skeletal\",\n  \"Brain-Cortex_v_Liver\",\n  \"Brain-Cortex_v_WholeBlood\"\n)\n\ncontrast_list &lt;- map_chr(selected_tissue_pairs,\n    ~contrast_list[str_detect(contrast_list, .x)])\nrds_list &lt;- map_chr(selected_tissue_pairs,\n    ~rds_list[str_detect(rds_list, .x)])\n\ncontrast_list\n\n\n[1] \"Brain-Cortex_v_Muscle-Skeletal\" \"Brain-Cortex_v_Liver\"          \n[3] \"Brain-Cortex_v_WholeBlood\"     \n\n\nCode\nrds_list\n\n\n[1] \"/project/yangili1/cdai/SpliFi/data/ds_v_dge/Brain-Cortex_v_Muscle-Skeletal_data.rds\"\n[2] \"/project/yangili1/cdai/SpliFi/data/ds_v_dge/Brain-Cortex_v_Liver_data.rds\"          \n[3] \"/project/yangili1/cdai/SpliFi/data/ds_v_dge/Brain-Cortex_v_WholeBlood_data.rds\"     \n\n\n\n\nCode\nFDR &lt;- params$fdr\nminPSI &lt;- params$psi\n\n\nProcess all the contrast data using FDR=1e-5:\n\n\nCode\nres1 &lt;- map2(rds_list, contrast_list, read_contrast, PSI = minPSI, FDR = FDR, selection = 'maxClu')\ndf1 &lt;- map_dfr(res1, ~.x$cor_res)\n\n\n\n\nCode\nres2 &lt;- map2(rds_list, contrast_list, read_contrast, PSI = minPSI, FDR = FDR, selection = 'maxGene')\ndf2 &lt;- map_dfr(res2, ~.x$cor_res)\n\n\n\n\nCode\nres3 &lt;- map2(rds_list, contrast_list, read_contrast, PSI = minPSI, FDR = FDR, selection = 'all')\ndf3 &lt;- map_dfr(res3, ~.x$cor_res)\n\n\n\n\nCode\nggs1 &lt;- map(res1, ~.x$gg)\n\nggs1[[1]] + ggs1[[2]] + ggs1[[3]] + plot_layout(ncol = 3, guides = 'collect')\n\n\n\n\n\n\n\n\nFigure 1: Select 1 best intron per cluster\n\n\n\n\n\n\n\nCode\nggs2 &lt;- map(res2, ~.x$gg)\n\nggs2[[1]] + ggs2[[2]] + ggs2[[3]] + plot_layout(ncol = 3, guides = 'collect')\n\n\n\n\n\n\n\n\nFigure 2: Select 1 best intron per gene\n\n\n\n\n\n\n\nCode\nggs3 &lt;- map(res3, ~.x$gg)\n\nggs3[[1]] + ggs3[[2]] + ggs3[[3]] + plot_layout(ncol = 3, guides = 'collect')\n\n\n\n\n\n\n\n\nFigure 3: Select all introns in cluster\n\n\n\n\n\n\n\nCode\nres3[[1]]$joineddf %&gt;% DT::datatable()\n\n\n\n\nTable 1: joined data for selecting 1 best intron per cluster"
  },
  {
    "objectID": "analysis/2024-06-19-GTEx-PSI-Heatmap.html#select-a-union-set-of-unprod.-intron-clusters",
    "href": "analysis/2024-06-19-GTEx-PSI-Heatmap.html#select-a-union-set-of-unprod.-intron-clusters",
    "title": "GTEx PSI heatmap",
    "section": "Select a union set of unprod. intron clusters",
    "text": "Select a union set of unprod. intron clusters\ncriteria:\n\nds FDR &lt; 1e-5\nabs(deltaPSI) &gt; 0.1\ndge FDR &lt; 1e-5\nselect the best UP intron for each cluster, then collect cluster ID"
  },
  {
    "objectID": "analysis/2024-06-19-GTEx-PSI-Heatmap.html#plot-heatmap",
    "href": "analysis/2024-06-19-GTEx-PSI-Heatmap.html#plot-heatmap",
    "title": "GTEx PSI heatmap",
    "section": "Plot Heatmap",
    "text": "Plot Heatmap\n\n\nCode\ntissue_labels &lt;- fread(\"../analysis/gtex-tissue-code.csv\",\n  col.names = c(\"tissue\", \"label\"),\n  header = F) %&gt;% deframe\n\n\n\n\nCode\n# organize the matrix, mainly labels\nmx &lt;- mx %&gt;% column_to_rownames(\"cluster\")\ncolnames(mx) &lt;- tissue_labels[colnames(mx)]\n\n\n\n\nCode\nlegendBreaks &lt;- seq(-4, 4, 2)\n# colors &lt;- rev(RColorBrewer::brewer.pal(length(legendBreaks), \"RdBu\"))\ncolors &lt;- c(\"#053061\", \"#2166AC\", \"#F7F7F7\", \"#B2182B\", \"#67001F\")\ncolfunc &lt;- circlize::colorRamp2(\n  breaks = legendBreaks, \n  colors = colors\n  )\n\n\n\n\nCode\nset.seed(123)\ncluster_method &lt;- \"ward.D\"\nht &lt;- mx %&gt;%\n  as.matrix %&gt;% t %&gt;% scale %&gt;% t %&gt;%\n  Heatmap(\n    col = colfunc,\n    row_km = 12, row_gap = unit(0.2, \"mm\"), \n    column_km = 3, column_gap = unit(0.2, \"mm\"),\n    show_parent_dend_line = F,\n    show_row_names = FALSE, clustering_method_rows = cluster_method, show_row_dend = F,\n    clustering_method_columns = cluster_method, \n    column_dend_height = unit(1.5, \"in\"), show_column_dend = T,\n    heatmap_legend_param = list(title = \"PSI (z-score)\"),\n    use_raster = T\n    )\n\n\n\n\nCode\nht\n\n\nLoading required namespace: Cairo\n\n\nLoading required namespace: magick"
  },
  {
    "objectID": "analysis/2024-06-15-GTEx-sqtl-enrich.html",
    "href": "analysis/2024-06-15-GTEx-sqtl-enrich.html",
    "title": "GTEx sQTL enrichment",
    "section": "",
    "text": "Enrichment of sQTL in eQTL pvalues\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 1\n\n\n\n\n\n\n\n\n\n\n\nFigure 2\n\n\n\n\n\n\n\n\n\n\n\nFigure 3\n\n\n\n\n\n\n\n\n\n\n\nFigure 4\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 5\n\n\n\n\n\n\n\n\n\n\n\nFigure 6\n\n\n\n\n\n\n\n\n\n\n\nFigure 7\n\n\n\n\n\n\n\n\n\n\n\nFigure 8\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 9\n\n\n\n\n\n\n\n\n\n\n\nFigure 10\n\n\n\n\n\n\n\n\n\n\n\nFigure 11\n\n\n\n\n\n\n\n\n\n\n\nFigure 12\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 13\n\n\n\n\n\n\n\n\n\n\n\nFigure 14\n\n\n\n\n\n\n\n\n\n\n\nFigure 15\n\n\n\n\n\n\n\n\n\n\n\nFigure 16\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 17\n\n\n\n\n\n\n\n\n\n\n\nFigure 18\n\n\n\n\n\n\n\n\n\n\n\nFigure 19\n\n\n\n\n\n\n\n\n\n\n\nFigure 20\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 21\n\n\n\n\n\n\n\n\n\n\n\nFigure 22\n\n\n\n\n\n\n\n\n\n\n\nFigure 23\n\n\n\n\n\n\n\n\n\n\n\nFigure 24\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 25\n\n\n\n\n\n\n\n\n\n\n\nFigure 26\n\n\n\n\n\n\n\n\n\n\n\nFigure 27\n\n\n\n\n\n\n\n\n\n\n\nFigure 28\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 29\n\n\n\n\n\n\n\n\n\n\n\nFigure 30\n\n\n\n\n\n\n\n\n\n\n\nFigure 31\n\n\n\n\n\n\n\n\n\n\n\nFigure 32\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 33\n\n\n\n\n\n\n\n\n\n\n\nFigure 34\n\n\n\n\n\n\n\n\n\n\n\nFigure 35\n\n\n\n\n\n\n\n\n\n\n\nFigure 36\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 37\n\n\n\n\n\n\n\n\n\n\n\nFigure 38\n\n\n\n\n\n\n\n\n\n\n\nFigure 39\n\n\n\n\n\n\n\n\n\n\n\nFigure 40\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 41\n\n\n\n\n\n\n\n\n\n\n\nFigure 42\n\n\n\n\n\n\n\n\n\n\n\nFigure 43\n\n\n\n\n\n\n\n\n\n\n\nFigure 44\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 45\n\n\n\n\n\n\n\n\n\n\n\nFigure 46\n\n\n\n\n\n\n\n\n\n\n\nFigure 47\n\n\n\n\n\n\n\n\n\n\n\nFigure 48\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 49\n\n\n\n\n\n\n\n\nComparison of sQTL (top SNP beta) and eQTL effect size (nominal beta of same top sQTL SNP)\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 50: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\nFigure 51: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\nFigure 52: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\nFigure 53: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 54: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\nFigure 55: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\nFigure 56: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\nFigure 57: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 58: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\nFigure 59: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\nFigure 60: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\nFigure 61: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 62: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\nFigure 63: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\nFigure 64: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\nFigure 65: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 66: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\nFigure 67: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\nFigure 68: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\nFigure 69: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 70: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\nFigure 71: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\nFigure 72: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\nFigure 73: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 74: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\nFigure 75: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\nFigure 76: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\nFigure 77: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 78: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\nFigure 79: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\nFigure 80: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\nFigure 81: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 82: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\nFigure 83: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\nFigure 84: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\nFigure 85: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 86: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\nFigure 87: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\nFigure 88: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\nFigure 89: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 90: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\nFigure 91: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\nFigure 92: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\nFigure 93: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 94: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\nFigure 95: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\nFigure 96: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\nFigure 97: comparison of sQTL and eQTL effect size\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 98: comparison of sQTL and eQTL effect size"
  },
  {
    "objectID": "analysis/2024-06-15-GTEx-sqtl-enrich.html#gtex",
    "href": "analysis/2024-06-15-GTEx-sqtl-enrich.html#gtex",
    "title": "GTEx sQTL enrichment",
    "section": "GTEx",
    "text": "GTEx\nFor GTEx, use sQTLs from 49 tissues. We use FDR &lt; 0.1 and cluster type PR or PR,UP to filter sQTLs.\n\n\nCode\nTissues &lt;- dir(\"../code/results/qtl/noisy/GTEx/\")\nTissues &lt;- Tissues[!Tissues %in% c(\"Bladder\")]\nnames(Tissues) &lt;- Tissues \nbase1.gtex &lt;- \"../code/results/qtl/noisy/GTEx\"\nbase2.gtex &lt;- \"/cis_100000/perm\"\nsuffix &lt;- \"addQval.txt.gz\"\n\n\n\n\nCode\nselect_tissue\n\n\n[1] \"Liver\"         \"Kidney-Cortex\" \"Kidney-Cortex\" \"Brain-Cortex\" \n\n\nCode\nTissues\n\n\n   Brain-Cortex   Kidney-Cortex           Liver \n \"Brain-Cortex\" \"Kidney-Cortex\"         \"Liver\" \n\n\n\n\nCode\nreadGTExSQTL &lt;- function(tissue) {\n  base1.gtex &lt;- \"../code/results/qtl/noisy/GTEx/\"\n  base2.gtex &lt;- \"/cis_100000/perm\"\n  suffix &lt;- \"addQval.txt.gz\"\n  folder &lt;- glue(\"{base1.gtex}/{tissue}/separateNoise{base2.gtex}\")\n  files &lt;- glue(\"{folder}/chr{1:22}.{suffix}\")\n  dt &lt;- map_dfr(files, fread)\n}\n\n\n\n\nCode\nFDR &lt;- params$fdr\n\n\n\n\nCode\ngtex.sqls &lt;- map(gtex.sqls, \n    ~.x[ctype %in% c(\"PR\", \"PR,UP\") & \n        q &lt; FDR & \n        itype %in% c(\"PR\", \"UP\"),\n       ]\n)\n\n\n\n\nCode\ngtex.sqls['Liver']\n\n\n$Liver\n                                phenotype_id phenotype_chr phenotype_start\n   1:          chr1:941306:942135:clu_8_+:PR          chr1          941307\n   2:     chr1:1082987:1084352:clu_1808_-:PR          chr1         1082988\n   3:     chr1:1090428:1091471:clu_1810_-:PR          chr1         1090429\n   4:     chr1:1091374:1091471:clu_1810_-:PR          chr1         1091375\n   5:     chr1:1217688:1218457:clu_1814_-:PR          chr1         1217689\n  ---                                                                     \n4147: chr22:50571287:50571374:clu_34473_-:UP         chr22        50571288\n4148: chr22:50571292:50571374:clu_34473_-:PR         chr22        50571293\n4149: chr22:50571533:50572005:clu_34474_-:UP         chr22        50571534\n4150: chr22:50571539:50572005:clu_34474_-:PR         chr22        50571540\n4151: chr22:50782347:50783500:clu_34485_-:PR         chr22        50782348\n      phenotype_end phenotype_strand num_variants best_nom_dist\n   1:        942135                +          558         58596\n   2:       1084352                -          596          3532\n   3:       1091471                -          604             0\n   4:       1091471                -          601            48\n   5:       1218457                -          594             0\n  ---                                                          \n4147:      50571374                -          613         67732\n4148:      50571374                -          613         67737\n4149:      50572005                -          613            10\n4150:      50572005                -          613            16\n4151:      50783500                -          271          4627\n            best_genotype_id best_genotype_chr best_genotype_start\n   1:   chr1_1000731_C_T_b38              chr1             1000731\n   2:   chr1_1079456_A_G_b38              chr1             1079456\n   3:   chr1_1091327_C_A_b38              chr1             1091327\n   4:   chr1_1091327_C_A_b38              chr1             1091327\n   5:   chr1_1217733_G_A_b38              chr1             1217733\n  ---                                                             \n4147: chr22_50503556_T_C_b38             chr22            50503556\n4148: chr22_50503556_T_C_b38             chr22            50503556\n4149: chr22_50571524_C_T_b38             chr22            50571524\n4150: chr22_50571524_C_T_b38             chr22            50571524\n4151: chr22_50777721_C_A_b38             chr22            50777721\n      best_genotype_end dof_true dof_est beta_ml1 beta_ml2    pval_nom\n   1:           1000731      206 173.491 0.999630  61.6647 1.00142e-05\n   2:           1079456      206 169.900 1.029230  52.6246 4.72618e-07\n   3:           1091327      206 170.473 1.063910  60.7541 4.72455e-08\n   4:           1091327      206 171.509 1.039650  61.3011 1.25005e-05\n   5:           1217733      206 180.823 0.985867  64.7615 9.74565e-07\n  ---                                                                 \n4147:          50503556      206 164.005 1.074300  70.5185 9.71734e-06\n4148:          50503556      206 166.349 1.054620  70.7961 5.69728e-06\n4149:          50571524      206 170.584 1.039530  78.1318 2.85273e-15\n4150:          50571524      206 171.298 1.043020  75.7380 1.04160e-12\n4151:          50777721      206 171.911 1.009370  41.7485 3.09455e-05\n        pval_r2     slope    pval_emp    pval_adj          q itype       clu\n   1: 0.0905641  0.410522 0.002997000 3.12738e-03 5.6690e-02    PR     clu_8\n   2: 0.1161460 -0.362335 0.000999001 1.95822e-04 5.1761e-03    PR  clu_1808\n   3: 0.1350960 -0.444126 0.000999001 2.10856e-05 6.8731e-04    PR  clu_1810\n   4: 0.0886884  0.382368 0.003996000 3.26171e-03 5.8541e-02    PR  clu_1810\n   5: 0.1101270  0.604832 0.000999001 3.28634e-04 8.2658e-03    PR  clu_1814\n  ---                                                                       \n4147: 0.0908185  0.732629 0.004995000 3.68588e-03 4.7427e-02    UP clu_34473\n4148: 0.0953247 -0.774851 0.002997000 2.31100e-03 3.4052e-02    PR clu_34473\n4149: 0.2617420 -0.663174 0.000999001 2.03187e-11 9.1316e-10    UP clu_34474\n4150: 0.2188700  0.653923 0.000999001 2.72907e-09 1.1596e-07    PR clu_34474\n4151: 0.0810004  0.522102 0.008991010 5.59992e-03 6.5588e-02    PR clu_34485\n      ctype\n   1:    PR\n   2: PR,UP\n   3:    PR\n   4:    PR\n   5:    PR\n  ---      \n4147: PR,UP\n4148: PR,UP\n4149: PR,UP\n4150: PR,UP\n4151:    PR\n\n\n\n\nCode\ntissue.labels &lt;- fread(\"/project/yangili1/cdai/splice-pub/analysis/gtex-tissue-code.csv\",\n                      col.names = c(\"tissue\", \"label\"), header = F)"
  },
  {
    "objectID": "analysis/2024-06-25-pyfastx-1-or-0-base.html",
    "href": "analysis/2024-06-25-pyfastx-1-or-0-base.html",
    "title": "Should leafcutter 2 be using 1 or 0 based coordinates?",
    "section": "",
    "text": "Does pyfastx use 0 or 1 based coordinates?\nanswer: pyfastx does use 1 based coordiantes for the fa.fetch() method. In addition, how stop codon and and transcripts were constructed needs scrutiny in because of how base is handled.\n\n\nCode\nimport os\nimport pyfastx\n\n\n\n\nCode\nprint(os.getcwd())\n\n\n/project/yangili1/cdai/splice-pub/analysis\n\n\n\n\nCode\nfa_file = './test.fa'\n\n\n\n\nCode\nwith open(fa_file) as f:\n  fa_text = f.readlines()\n\n\n\n\nCode\n  fa_text\n\n\n['&gt;JZ822577.1 contig1 cDNA library of flower petals in tree peony by suppression subtractive hybridization Paeonia suffruticosa cDNA, mRNA sequence\\n',\n 'CTCTAGAGATTACTTCTTCACATTCCAGATCACTCAGGCTCTTTGTCATTTTAGTTTGACTAGGATATCG\\n',\n 'AGTATTCAAGCTCATCGCTTTTGGTAATCTTTGCGGTGCATGCCTTTGCATGCTGTATTGCTGCTTCATC\\n',\n 'ATCCCCTTTGACTTGTGTGGCGGTGGCAAGACATCCGAAGAGTTAAGCGATGCTTGTCTAGTCAATTTCC\\n',\n 'CCATGTACAGAATCATTGTTGTCAATTGGTTGTTTCCTTGATGGTGAAGGGGCTTCAATACATGAGTTCC\\n',\n 'AAACTAACATTTCTTGACTAACACTTGAGGAAGAAGGACAAGGGTCCCCATGT\\n',\n '&gt;JZ822578.1 contig2 cDNA library of flower petals in tree peony by suppression subtractive hybridization Paeonia suffruticosa cDNA, mRNA sequence\\n',\n 'TACATGGGGATGGCTCCCCAACTAAGCCATTTGCAGTTCCCAATACATGACAGTATAAAAAAGATTATAT\\n',\n 'AACACAAGAACTCCATGTGGTTGTTTTTGACCTGAAGTGGGCGAAATCTTGTAGCAATGGAGCCAAATGA\\n',\n 'TCAATCTTTTCTTTCACCTACTAGTAGTGATGAAAGGTTGGAAGTTGCTGGGGATCTTTTGGAAGAGTGC\\n',\n 'TGGTTCTTTGAAAACATACTTGATAGAAAAGCGAGGATGTTGAGATGTCATTCTGACCCTTGTCCTTCTT\\n',\n 'CCTCAAGTGTTAGTCAAGAAATGTTAGTTTGGAACTCATGTATTGAAGCCCCTTCACCATCAAGGAAACA\\n',\n 'ACCAATTGACAACAATGATTCTGTACAACCAAAAGAAAGCGAATCGACTCAATCATCATCTCGCCATGGT\\n',\n 'TTGCTTCGAGCACCGTCCTTACCACCTTGTATAGGGAGAAAAGGAAGTGAACCCAGGACGAGCAAATTGA\\n',\n 'CTAGACAAGCATCGCTTAACTCTTCGGATGTCTTGCCACCGCCACACAAGTCAAAGGGGATGATGAAGCA\\n',\n 'GCAATACAGCATGCAAAGGCATGCACCTCAAAGATTACCAAAAGCGATGAGCTTGAATACTCGATATCCT\\n',\n 'AGTCAAACTAAAATGACAAAGAGCCTGAGTGATCTGGAATGTGAAGAAGT\\n']\n\n\n\n\nCode\nfa = pyfastx.Fasta(fa_file)\n\n\n\n\nCode\nfor seq in fa:\n  print(seq.name)\n  print(seq.seq)\n  print(seq.description)\n  print('\\n\\n')\n\n\nJZ822577.1\nCTCTAGAGATTACTTCTTCACATTCCAGATCACTCAGGCTCTTTGTCATTTTAGTTTGACTAGGATATCGAGTATTCAAGCTCATCGCTTTTGGTAATCTTTGCGGTGCATGCCTTTGCATGCTGTATTGCTGCTTCATCATCCCCTTTGACTTGTGTGGCGGTGGCAAGACATCCGAAGAGTTAAGCGATGCTTGTCTAGTCAATTTCCCCATGTACAGAATCATTGTTGTCAATTGGTTGTTTCCTTGATGGTGAAGGGGCTTCAATACATGAGTTCCAAACTAACATTTCTTGACTAACACTTGAGGAAGAAGGACAAGGGTCCCCATGT\nJZ822577.1 contig1 cDNA library of flower petals in tree peony by suppression subtractive hybridization Paeonia suffruticosa cDNA, mRNA sequence\n\n\n\nJZ822578.1\nTACATGGGGATGGCTCCCCAACTAAGCCATTTGCAGTTCCCAATACATGACAGTATAAAAAAGATTATATAACACAAGAACTCCATGTGGTTGTTTTTGACCTGAAGTGGGCGAAATCTTGTAGCAATGGAGCCAAATGATCAATCTTTTCTTTCACCTACTAGTAGTGATGAAAGGTTGGAAGTTGCTGGGGATCTTTTGGAAGAGTGCTGGTTCTTTGAAAACATACTTGATAGAAAAGCGAGGATGTTGAGATGTCATTCTGACCCTTGTCCTTCTTCCTCAAGTGTTAGTCAAGAAATGTTAGTTTGGAACTCATGTATTGAAGCCCCTTCACCATCAAGGAAACAACCAATTGACAACAATGATTCTGTACAACCAAAAGAAAGCGAATCGACTCAATCATCATCTCGCCATGGTTTGCTTCGAGCACCGTCCTTACCACCTTGTATAGGGAGAAAAGGAAGTGAACCCAGGACGAGCAAATTGACTAGACAAGCATCGCTTAACTCTTCGGATGTCTTGCCACCGCCACACAAGTCAAAGGGGATGATGAAGCAGCAATACAGCATGCAAAGGCATGCACCTCAAAGATTACCAAAAGCGATGAGCTTGAATACTCGATATCCTAGTCAAACTAAAATGACAAAGAGCCTGAGTGATCTGGAATGTGAAGAAGT\nJZ822578.1 contig2 cDNA library of flower petals in tree peony by suppression subtractive hybridization Paeonia suffruticosa cDNA, mRNA sequence\n\n\n\n\n\n\n\nCode\nfa.fetch('JZ822577.1', (1,6))\n\n\n'CTCTAG'\n\n\n\n\nCode\nfa.fetch('JZ822577.1', (1,6), strand = '-')\n\n\n'CTAGAG'"
  },
  {
    "objectID": "analysis/2024-06-25-bug-fix.html",
    "href": "analysis/2024-06-25-bug-fix.html",
    "title": "off by 1 bug",
    "section": "",
    "text": "All leafcutter2’s other functions are BED like coordinates like [0, 100). However, the solve_NMD function uses 3rd party packages that actually use GTF like 1 based coordinates like [1, 100].\nFor example, fetching of fasta sequence github permlink is using 1 based, even though the coordinates supplied is going to be 0 based due to input data being 0 based.\nseq = Seq(fa.fetch(chrom, (exon_coord[0],exon_coord[1])))+leftover\nOther relevant lines of codes will also need to change, like here, due to difference of [ ] vs [ ).\nfor c in stop_codons:\n        if strand == \"+\":\n            seed.append([c[1]])\n        else:\n            seed.append([c[0]])\nalso here\nhere"
  },
  {
    "objectID": "analysis/2024-06-25-bug-fix.html#solution",
    "href": "analysis/2024-06-25-bug-fix.html#solution",
    "title": "off by 1 bug",
    "section": "Solution",
    "text": "Solution\nThe solution is either change within the function, so all operations of solve_NMD are using 0-based index; or first convert all input (juncs, start, stop codons) to 1 based [], then revert back to 0 based [) for the returned juncs."
  }
]