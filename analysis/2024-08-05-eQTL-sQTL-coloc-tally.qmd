---
title: "eQTL sQTL coloc with HyprColoc tally"
date: 2024-8-5
format: html
categories: ['coloc']
code-fold: true
execute:
  include: true
  eval: true
  cache: false
  echo: true
---


# Intro

Coloc using HyprColoc. Detailed procedures in `../code/workflow/rules/coloc.smk`. Briefly, 
first collect sQTL and eQTLs with FDR = 0.1. Then get intron/gene pairs. Run nominal pass 
to get betas and standard errors. Then run HyprColoc on shared SNPs on each pair.



# code


```{r}
suppressMessages(library(tidyverse))
suppressMessages(library(glue))
suppressMessages(library(data.table))

```



```{r}
base_dir = '../code/results/coloc/sqtl-eqtl/GTEx'
coloc_result_pat = '.*coloc-res.txt'
coloc_res_files = list.files(base_dir, pattern = coloc_result_pat, full.names = TRUE, recursive = TRUE)

tissues = str_split(coloc_res_files, '/', simplify = T) %>% .[, 7] %>% unique
names(tissues) = tissues
coloc_files = map(tissues, ~coloc_res_files[str_detect(coloc_res_files, .x)]) %>% 
  map(~naturalsort::naturalsort(.x))

coloc_res = imap(
  coloc_files,
  \(fl, t) {
    map_dfr(fl, ~fread(.x) %>% mutate(tissue = t))
  }
)

```




```{r}
coloc_res = map(
  coloc_res,
  \(dt) {
    intron_gene = str_split(dt$id, '\\|', simplify = T)
    dt = mutate(dt, intron = intron_gene[, 1], gene = intron_gene[, 2])
    dt = mutate(dt, itype = str_extract(intron, 'PR|UP|NE'))
    return(dt)
  }
)


coloc_res = map(
  coloc_res,
  \(dt) dt[posterior_prob > 0.7]
)

```


Number of significant coloc results per tissue with posterior probability > 0.7

```{r}
coloc_res %>% 
  map(\(dt) dt[, .(N = uniqueN(id)), by = itype])
```

































