{
  "hash": "a3f9d5bd6e5a53cf4b029295bcde4876",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Figure 1 - Annotation of Splicing (GenomeTracks)\ndate: '2024-09-05'\ncode-fold: true\nexecute:\n  include: false\n  eval: false\n  echo: false\n  warning: false\n  message: false\n  cache: false\ncategories:\n  - figures\n  - manuscript\n---\n\n\n\n\n# Overview\nPlots for Figure 1C\n\nPurpose: illustrate leafcutter2 can annotate productive and unproductive introns, without the need for gencode annotation. Particularly show concordance with annotations, and additional unproductive annotations.\n\n\n\nData:\n\n- leafcutter 2 output\n- Gencode annotations\n- SRSF genes are with gene names `SRSF[1-12]`\n\n\nUsing Geuvadis EUR results, I found 6 SRSF genes ahving both UP and PR introns.\nI will plot sashimi plots to illustrate the annotations from leafcutter 2 and gencode.\n\nPlotted genes: SRSF11, SRSF10, SRSF7, SRSF3, SRSF1, SRSF6\n\n\n\n# Sashimi annnotation plots\n\n\n\n::: {.cell .fig-cap-location-margin}\n::: {.cell-output-display}\n![SRSF1](SRSF1_tracks.svg){#fig-srsf1 width=95%}\n:::\n:::\n\n::: {.cell .fig-cap-location-margin}\n::: {.cell-output-display}\n![SRSF3](SRSF3_tracks.svg){#fig-srsf3 width=95%}\n:::\n:::\n\n::: {.cell .fig-cap-location-margin}\n::: {.cell-output-display}\n![SRSF6](SRSF6_tracks.svg){#fig-srsf6 width=95%}\n:::\n:::\n\n::: {.cell .fig-cap-location-margin}\n::: {.cell-output-display}\n![SRSF7](SRSF7_tracks.svg){#fig-srsf7 width=95%}\n:::\n:::\n\n::: {.cell .fig-cap-location-margin}\n::: {.cell-output-display}\n![SRSF10](SRSF10_tracks.svg){#fig-srsf10 width=95%}\n:::\n:::\n\n::: {.cell .fig-cap-location-margin}\n::: {.cell-output-display}\n![SRSF11](SRSF11_tracks.svg){#fig-srsf11 width=95%}\n:::\n:::\n\n\n\n<!--\nUSE BELOW CODE TO PREPARE AND GENERATE PLOTS\n\n-->\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<!-- \nFor Geuvadis dataset, only SRSF11, SRSF10, SRSF7, SRSF3, SRSF1, SRSF6 have both UP and PR introns. Only plot these genes \n-->\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}